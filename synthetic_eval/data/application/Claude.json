{
    "HomePage.js": "import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { getCurrentUser } from \"../utils/fakeUserService\";\nimport itemData from \"../data/itemData.json\";\nimport { Search, ShoppingCart, Heart, Menu, User, X } from \"lucide-react\";\nimport \"./HomePage.css\"; // Updated import path to match the file location\n\nconst HomePage = () => {\n  const user = getCurrentUser();\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [filteredItems, setFilteredItems] = useState(itemData);\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [selectedCategory, setSelectedCategory] = useState(\"All\");\n  const [sortOrder, setSortOrder] = useState(\"default\");\n\n  // Categories derived from item data\n  const categories = [\"All\", ...new Set(itemData.map(item => item.category || \"Uncategorized\"))];\n\n  // Filter and sort items based on search query, category, and sort order\n  useEffect(() => {\n    let results = [...itemData];\n    \n    // Apply search filter\n    if (searchQuery) {\n      results = results.filter(item => \n        item.title.toLowerCase().includes(searchQuery.toLowerCase()) ||\n        (item.description && item.description.toLowerCase().includes(searchQuery.toLowerCase()))\n      );\n    }\n    \n    // Apply category filter\n    if (selectedCategory !== \"All\") {\n      results = results.filter(item => item.category === selectedCategory);\n    }\n    \n    // Apply sorting\n    switch (sortOrder) {\n      case \"price-asc\":\n        results.sort((a, b) => a.price - b.price);\n        break;\n      case \"price-desc\":\n        results.sort((a, b) => b.price - a.price);\n        break;\n      case \"name-asc\":\n        results.sort((a, b) => a.title.localeCompare(b.title));\n        break;\n      case \"name-desc\":\n        results.sort((a, b) => b.title.localeCompare(a.title));\n        break;\n      default:\n        // Keep original order\n        break;\n    }\n    \n    setFilteredItems(results);\n  }, [searchQuery, selectedCategory, sortOrder]);\n\n  // Toggle mobile menu\n  const toggleMenu = () => {\n    setIsMenuOpen(!isMenuOpen);\n  };\n\n  return (\n    <div className=\"home-page\">\n      {/* Header */}\n      <header className=\"header\">\n        <div className=\"header-container\">\n          <div className=\"logo-container\">\n            <Link to=\"/\" className=\"logo\">ShopEase</Link>\n          </div>\n          \n          <div className=\"search-container\">\n            <input\n              type=\"text\"\n              placeholder=\"Search for products...\"\n              value={searchQuery}\n              onChange={(e) => setSearchQuery(e.target.value)}\n              className=\"search-input\"\n            />\n            <button className=\"search-button\" aria-label=\"Search\">\n              <Search size={20} />\n            </button>\n          </div>\n          \n          <nav className=\"desktop-nav\">\n            <Link to=\"/cart\" className=\"nav-link\">\n              <ShoppingCart size={20} />\n              <span>Cart</span>\n            </Link>\n            <Link to=\"/wishlist\" className=\"nav-link\">\n              <Heart size={20} />\n              <span>Wishlist</span>\n            </Link>\n            <Link to={user ? \"/settings\" : \"/login\"} className=\"nav-link\">\n              <User size={20} />\n              <span>{user ? user.username : \"Login\"}</span>\n            </Link>\n          </nav>\n          \n          <button className=\"menu-toggle\" onClick={toggleMenu} aria-label=\"Toggle menu\">\n            {isMenuOpen ? <X size={24} /> : <Menu size={24} />}\n          </button>\n        </div>\n        \n        {/* Mobile menu */}\n        <div className={`mobile-menu ${isMenuOpen ? 'active' : ''}`}>\n          <Link to=\"/cart\" className=\"mobile-nav-link\" onClick={toggleMenu}>\n            <ShoppingCart size={20} />\n            <span>Cart</span>\n          </Link>\n          <Link to=\"/wishlist\" className=\"mobile-nav-link\" onClick={toggleMenu}>\n            <Heart size={20} />\n            <span>Wishlist</span>\n          </Link>\n          <Link to={user ? \"/settings\" : \"/login\"} className=\"mobile-nav-link\" onClick={toggleMenu}>\n            <User size={20} />\n            <span>{user ? user.username : \"Login\"}</span>\n          </Link>\n        </div>\n      </header>\n\n      {/* Hero Section */}\n      <section className=\"hero-section\">\n        <div className=\"hero-content\">\n          <h1>Welcome to ShopEase</h1>\n          <p>Discover amazing products with the best deals</p>\n          <Link to=\"/featured\" className=\"cta-button\">Shop Now</Link>\n        </div>\n      </section>\n\n      {/* Main Content */}\n      <main className=\"main-content\">\n        {/* Welcome Message */}\n        <section className=\"welcome-section\">\n          <h2 className=\"welcome-message\">\n            Welcome back, {user ? user.username : \"Guest\"}!\n          </h2>\n        </section>\n\n        {/* Filter Controls */}\n        <section className=\"filter-section\">\n          <div className=\"category-filter\">\n            <label htmlFor=\"category-select\">Category:</label>\n            <select \n              id=\"category-select\"\n              value={selectedCategory}\n              onChange={(e) => setSelectedCategory(e.target.value)}\n              className=\"filter-select\"\n            >\n              {categories.map(category => (\n                <option key={category} value={category}>{category}</option>\n              ))}\n            </select>\n          </div>\n          \n          <div className=\"sort-filter\">\n            <label htmlFor=\"sort-select\">Sort by:</label>\n            <select \n              id=\"sort-select\"\n              value={sortOrder}\n              onChange={(e) => setSortOrder(e.target.value)}\n              className=\"filter-select\"\n            >\n              <option value=\"default\">Featured</option>\n              <option value=\"price-asc\">Price: Low to High</option>\n              <option value=\"price-desc\">Price: High to Low</option>\n              <option value=\"name-asc\">Name: A to Z</option>\n              <option value=\"name-desc\">Name: Z to A</option>\n            </select>\n          </div>\n        </section>\n\n        {/* Products Grid */}\n        <section className=\"featured-products\">\n          <h2 className=\"section-title\">Featured Products</h2>\n          \n          {filteredItems.length === 0 ? (\n            <div className=\"no-results\">\n              <p>No products found matching your criteria.</p>\n            </div>\n          ) : (\n            <div className=\"products-grid\">\n              {filteredItems.map(item => (\n                <div className=\"product-card\" key={item.id}>\n                  <div className=\"product-image-container\">\n                    <img\n                      src={`https://picsum.photos/id/${item.id}/200`}\n                      alt={item.title}\n                      className=\"product-image\"\n                    />\n                    <div className=\"product-overlay\">\n                      <button className=\"quick-action-btn wishlist-btn\" aria-label=\"Add to wishlist\">\n                        <Heart size={20} />\n                      </button>\n                      <button className=\"quick-action-btn cart-btn\" aria-label=\"Add to cart\">\n                        <ShoppingCart size={20} />\n                      </button>\n                    </div>\n                  </div>\n                  \n                  <div className=\"product-info\">\n                    <Link\n                   to={`/item/${item.id}`}\n                      state={{ title: item.title, price: item.price }}\n                      className=\"product-title\"\n                    >\n                      {item.title}\n                    </Link>\n                    {item.category && <p className=\"product-category\">{item.category}</p>}\n                    <div className=\"product-price\">${item.price.toFixed(2)}</div>\n                    \n                    {item.rating && (\n                      <div className=\"product-rating\">\n                        {Array(5).fill().map((_, i) => (\n                        <span key={i} className={`star ${i < Math.round(item.rating) ? 'filled' : ''}`}>\u2605</span>\n                        ))}\n                        <span className=\"rating-count\">({item.reviews || 0})</span>\n                      </div>\n                    )}\n                  </div>\n                </div>\n              ))}\n            </div>\n          )}\n        </section>\n        \n        {/* Features Section */}\n        <section className=\"features-section\">\n          <div className=\"feature\">\n            <div className=\"feature-icon\">\ud83d\ude9a</div>\n            <h3>Free Shipping</h3>\n            <p>On orders over $50</p>\n          </div>\n          <div className=\"feature\">\n            <div className=\"feature-icon\">\ud83d\udd04</div>\n            <h3>Easy Returns</h3>\n            <p>30-day return policy</p>\n          </div>\n          <div className=\"feature\">\n            <div className=\"feature-icon\">\ud83d\udd12</div>\n            <h3>Secure Payment</h3>\n            <p>100% secure checkout</p>\n          </div>\n          <div className=\"feature\">\n            <div className=\"feature-icon\">\ud83d\udcac</div>\n            <h3>24/7 Support</h3>\n            <p>We're here to help</p>\n          </div>\n        </section>\n      </main>\n\n      {/* Footer */}\n      <footer className=\"footer\">\n        <div className=\"footer-container\">\n          <div className=\"footer-section\">\n            <h3>ShopEase</h3>\n            <p>Your one-stop shop for all your needs.</p>\n          </div>\n          \n          <div className=\"footer-section\">\n            <h3>Quick Links</h3>\n            <ul>\n              <li><Link to=\"/\">Home</Link></li>\n              <li><Link to=\"/about\">About Us</Link></li>\n              <li><Link to=\"/contact\">Contact</Link></li>\n            <li><Link to=\"/settings\">User Settings</Link></li>\n            </ul>\n          </div>\n          \n          <div className=\"footer-section\">\n            <h3>Categories</h3>\n            <ul>\n              {categories.slice(1).map(category => (\n                <li key={category}>\n                 <Link to={`/category/${category.toLowerCase()}`}>{category}</Link>\n                </li>\n              ))}\n            </ul>\n          </div>\n          \n          <div className=\"footer-section\">\n            <h3>Connect With Us</h3>\n            <div className=\"social-links\">\n              <a href=\"#\" aria-label=\"Facebook\">FB</a>\n              <a href=\"#\" aria-label=\"Twitter\">TW</a>\n              <a href=\"#\" aria-label=\"Instagram\">IG</a>\n              <a href=\"#\" aria-label=\"Pinterest\">PIN</a>\n            </div>\n          </div>\n        </div>\n        \n        <div className=\"footer-bottom\">\n          <p>&copy; {new Date().getFullYear()} ShopEase. All rights reserved.</p>\n        </div>\n      </footer>\n    </div>\n  );\n};\n\nexport default HomePage;",
    "HomePage.css": "/* Base styles and variables */\n:root {\n    --primary-color: #4a6bfa;\n    --primary-hover: #3251d8;\n    --secondary-color: #fd7e14;\n    --dark-color: #333;\n    --light-color: #f8f9fa;\n    --text-color: #212529;\n    --gray-color: #6c757d;\n    --border-color: #dee2e6;\n    --danger-color: #dc3545;\n    --success-color: #28a745;\n    --card-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n    --border-radius: 8px;\n    --transition-speed: 0.3s;\n  }\n  \n  /* Global styling */\n  * {\n    box-sizing: border-box;\n    margin: 0;\n    padding: 0;\n  }\n  \n  body {\n    font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen,\n      Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n    line-height: 1.6;\n    color: var(--text-color);\n    background-color: #f5f7fa;\n  }\n  \n  a {\n    text-decoration: none;\n    color: var(--primary-color);\n    transition: color var(--transition-speed) ease;\n  }\n  \n  a:hover {\n    color: var(--primary-hover);\n  }\n  \n  button {\n    cursor: pointer;\n  }\n  \n  .home-page {\n    display: flex;\n    flex-direction: column;\n    min-height: 100vh;\n  }\n  \n  /* Header Styles */\n  .header {\n    background-color: white;\n    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.08);\n    position: sticky;\n    top: 0;\n    z-index: 100;\n  }\n  \n  .header-container {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    padding: 1rem;\n    max-width: 1400px;\n    margin: 0 auto;\n    width: 100%;\n  }\n  \n  .logo-container {\n    flex: 0 0 auto;\n  }\n  \n  .logo {\n    font-size: 1.5rem;\n    font-weight: 700;\n    color: var(--primary-color);\n    letter-spacing: -0.5px;\n  }\n  \n  .search-container {\n    display: flex;\n    flex: 1;\n    max-width: 500px;\n    margin: 0 1rem;\n    position: relative;\n  }\n  \n  .search-input {\n    width: 100%;\n    padding: 0.75rem 1rem;\n    border: 1px solid var(--border-color);\n    border-radius: var(--border-radius);\n    font-size: 0.9rem;\n    transition: all var(--transition-speed) ease;\n  }\n  \n  .search-input:focus {\n    outline: none;\n    border-color: var(--primary-color);\n    box-shadow: 0 0 0 3px rgba(74, 107, 250, 0.25);\n  }\n  \n  .search-button {\n    position: absolute;\n    right: 10px;\n    top: 50%;\n    transform: translateY(-50%);\n    background: none;\n    border: none;\n    color: var(--gray-color);\n    transition: color var(--transition-speed) ease;\n  }\n  \n  .search-button:hover {\n    color: var(--primary-color);\n  }\n  \n  .desktop-nav {\n    display: flex;\n    align-items: center;\n  }\n  \n  .nav-link {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    margin-left: 1.5rem;\n    color: var(--dark-color);\n    font-size: 0.85rem;\n  }\n  \n  .nav-link svg {\n    margin-bottom: 0.25rem;\n  }\n  \n  .menu-toggle {\n    display: none;\n    background: none;\n    border: none;\n    color: var(--dark-color);\n  }\n  \n  .mobile-menu {\n    display: none;\n    flex-direction: column;\n    background-color: white;\n    padding: 1rem;\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n  }\n  \n  .mobile-nav-link {\n    display: flex;\n    align-items: center;\n    padding: 0.75rem 0;\n    color: var(--dark-color);\n    border-bottom: 1px solid var(--border-color);\n  }\n  \n  .mobile-nav-link svg {\n    margin-right: 0.75rem;\n  }\n  \n  .mobile-nav-link:last-child {\n    border-bottom: none;\n  }\n  \n  /* Hero Section */\n  .hero-section {\n    background: linear-gradient(to right, #4a6bfa, #6984ff);\n    color: white;\n    padding: 4rem 1rem;\n    text-align: center;\n  }\n  \n  .hero-content {\n    max-width: 800px;\n    margin: 0 auto;\n  }\n  \n  .hero-content h1 {\n    font-size: 2.5rem;\n    margin-bottom: 1rem;\n    font-weight: 800;\n  }\n  \n  .hero-content p {\n    font-size: 1.25rem;\n    margin-bottom: 2rem;\n    opacity: 0.9;\n  }\n  \n  .cta-button {\n    display: inline-block;\n    background-color: var(--secondary-color);\n    color: white;\n    padding: 0.75rem 2rem;\n    border-radius: var(--border-radius);\n    font-weight: 600;\n    transition: all var(--transition-speed) ease;\n  }\n  \n  .cta-button:hover {\n    background-color: #e86c09;\n    color: white;\n    transform: translateY(-2px);\n    box-shadow: 0 4px 12px rgba(253, 126, 20, 0.3);\n  }\n  \n  /* Main Content */\n  .main-content {\n    flex: 1;\n    max-width: 1400px;\n    margin: 0 auto;\n    padding: 2rem 1rem;\n    width: 100%;\n  }\n  \n  .welcome-section {\n    margin-bottom: 2rem;\n  }\n  \n  .welcome-message {\n    font-size: 1.5rem;\n    font-weight: 600;\n    color: var(--dark-color);\n  }\n  \n  /* Filter Section */\n  .filter-section {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-bottom: 2rem;\n    flex-wrap: wrap;\n    gap: 1rem;\n  }\n  \n  .category-filter,\n  .sort-filter {\n    display: flex;\n    align-items: center;\n  }\n  \n  .filter-section label {\n    margin-right: 0.5rem;\n    font-weight: 500;\n  }\n  \n  .filter-select {\n    padding: 0.5rem 1rem;\n    border: 1px solid var(--border-color);\n    border-radius: var(--border-radius);\n    background-color: white;\n    font-size: 0.9rem;\n  }\n  \n  /* Featured Products */\n  .featured-products {\n    margin-bottom: 3rem;\n  }\n  \n  .section-title {\n    font-size: 1.75rem;\n    margin-bottom: 1.5rem;\n    font-weight: 700;\n    color: var(--dark-color);\n    position: relative;\n    padding-bottom: 0.75rem;\n  }\n  \n  .section-title::after {\n    content: '';\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    width: 60px;\n    height: 3px;\n    background-color: var(--primary-color);\n  }\n  \n  .products-grid {\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n    gap: 2rem;\n  }\n  \n  .product-card {\n    background-color: white;\n    border-radius: var(--border-radius);\n    overflow: hidden;\n    box-shadow: var(--card-shadow);\n    transition: transform var(--transition-speed) ease, box-shadow var(--transition-speed) ease;\n    position: relative;\n  }\n  \n  .product-card:hover {\n    transform: translateY(-5px);\n    box-shadow: 0 8px 16px rgba(0, 0, 0, 0.15);\n  }\n  \n  .product-image-container {\n    position: relative;\n    padding-top: 100%; /* 1:1 Aspect Ratio */\n    overflow: hidden;\n  }\n  \n  .product-image {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n    transition: transform var(--transition-speed) ease;\n  }\n  \n  .product-card:hover .product-image {\n    transform: scale(1.05);\n  }\n  \n  .product-overlay {\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    padding: 1rem;\n    background: linear-gradient(to top, rgba(0, 0, 0, 0.7), transparent);\n    display: flex;\n    justify-content: center;\n    gap: 1rem;\n    opacity: 0;\n    transform: translateY(20px);\n    transition: opacity var(--transition-speed) ease, transform var(--transition-speed) ease;\n  }\n  \n  .product-card:hover .product-overlay {\n    opacity: 1;\n    transform: translateY(0);\n  }\n  \n  .quick-action-btn {\n    background-color: white;\n    border: none;\n    border-radius: 50%;\n    width: 40px;\n    height: 40px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    color: var(--dark-color);\n    transition: all var(--transition-speed) ease;\n  }\n  \n  .quick-action-btn:hover {\n    background-color: var(--primary-color);\n    color: white;\n    transform: scale(1.1);\n  }\n  \n  .product-info {\n    padding: 1rem;\n  }\n  \n  .product-title {\n    display: block;\n    font-weight: 600;\n    font-size: 1rem;\n    color: var(--dark-color);\n    margin-bottom: 0.25rem;\n    transition: color var(--transition-speed) ease;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n  }\n  \n  .product-category {\n    color: var(--gray-color);\n    font-size: 0.85rem;\n    margin-bottom: 0.5rem;\n  }\n  \n  .product-price {\n    font-weight: 700;\n    font-size: 1.125rem;\n    color: var(--primary-color);\n    margin-bottom: 0.5rem;\n  }\n  \n  .product-rating {\n    display: flex;\n    align-items: center;\n  }\n  \n  .star {\n    color: #d1d1d1;\n    font-size: 0.85rem;\n  }\n  \n  .star.filled {\n    color: #ffc107;\n  }\n  \n  .rating-count {\n    margin-left: 0.5rem;\n    font-size: 0.75rem;\n    color: var(--gray-color);\n  }\n  \n  .no-results {\n    text-align: center;\n    padding: 3rem 0;\n    color: var(--gray-color);\n  }\n  \n  /* Features Section */\n  .features-section {\n    display: grid;\n    grid-template-columns: repeat(4, 1fr);\n    gap: 2rem;\n    margin-bottom: 3rem;\n    text-align: center;\n  }\n  \n  .feature {\n    padding: 2rem;\n    background-color: white;\n    border-radius: var(--border-radius);\n    box-shadow: var(--card-shadow);\n    transition: transform var(--transition-speed) ease;\n  }\n  \n  .feature:hover {\n    transform: translateY(-5px);\n  }\n  \n  .feature-icon {\n    font-size: 2rem;\n    margin-bottom: 1rem;\n  }\n  \n  .feature h3 {\n    margin-bottom: 0.5rem;\n    font-weight: 600;\n  }\n  \n  .feature p {\n    color: var(--gray-color);\n  }\n  \n  /* Footer */\n  .footer {\n    background-color: #2b3445;\n    color: white;\n    padding: 3rem 1rem 1rem;\n    margin-top: auto;\n  }\n  \n  .footer-container {\n    display: grid;\n    grid-template-columns: repeat(4, 1fr);\n    gap: 2rem;\n    max-width: 1400px;\n    margin: 0 auto;\n    margin-bottom: 2rem;\n  }\n  \n  .footer-section h3 {\n    font-size: 1.25rem;\n    margin-bottom: 1.25rem;\n    position: relative;\n    padding-bottom: 0.75rem;\n  }\n  \n  .footer-section h3::after {\n    content: '';\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    width: 40px;\n    height: 2px;\n    background-color: var(--secondary-color);\n  }\n  \n  .footer-section p {\n    color: rgba(255, 255, 255, 0.7);\n    margin-bottom: 1rem;\n  }\n  \n  .footer-section ul {\n    list-style: none;\n  }\n  \n  .footer-section ul li {\n    margin-bottom: 0.5rem;\n  }\n  \n  .footer-section ul li a {\n    color: rgba(255, 255, 255, 0.7);\n    transition: color var(--transition-speed) ease;\n  }\n  \n  .footer-section ul li a:hover {\n    color: white;\n  }\n  \n  .social-links {\n    display: flex;\n    gap: 1rem;\n  }\n  \n  .social-links a {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 36px;\n    height: 36px;\n    background-color: rgba(255, 255, 255, 0.1);\n    border-radius: 50%;\n    color: white;\n    transition: all var(--transition-speed) ease;\n  }\n  \n  .social-links a:hover {\n    background-color: var(--primary-color);\n    transform: translateY(-3px);\n  }\n  \n  .footer-bottom {\n    text-align: center;\n    padding-top: 1.5rem;\n    border-top: 1px solid rgba(255, 255, 255, 0.1);\n    color: rgba(255, 255, 255, 0.5);\n    font-size: 0.875rem;\n  }\n  \n  /* Responsive Styles */\n  @media (max-width: 1024px) {\n    .features-section {\n      grid-template-columns: repeat(2, 1fr);\n    }\n    \n    .footer-container {\n      grid-template-columns: repeat(2, 1fr);\n    }\n  }\n  \n  @media (max-width: 768px) {\n    .header-container {\n      padding: 0.75rem;\n    }\n    \n    .search-container {\n      max-width: none;\n      margin: 0 0.5rem;\n    }\n    \n    .desktop-nav {\n      display: none;\n    }\n    \n    .menu-toggle {\n      display: block;\n    }\n    \n    .mobile-menu.active {\n      display: flex;\n    }\n    \n    .hero-content h1 {\n      font-size: 2rem;\n    }\n    \n    .hero-content p {\n      font-size: 1rem;\n    }\n    \n    .products-grid {\n      grid-template-columns: repeat(2, 1fr);\n      gap: 1rem;\n    }\n  }\n  \n  @media (max-width: 576px) {\n    .filter-section {\n      flex-direction: column;\n      align-items: flex-start;\n    }\n    \n    .products-grid {\n      grid-template-columns: 1fr;\n    }\n    \n    .features-section {\n      grid-template-columns: 1fr;\n    }\n    \n    .footer-container {\n      grid-template-columns: 1fr;\n    }\n    \n    .hero-section {\n      padding: 2rem 1rem;\n    }\n  }\n  \n  /* Animation styles */\n  @keyframes fadeIn {\n    from {\n      opacity: 0;\n      transform: translateY(10px);\n    }\n    to {\n      opacity: 1;\n      transform: translateY(0);\n    }\n  }\n  \n  .product-card {\n    animation: fadeIn 0.5s ease forwards;\n    animation-delay: calc(var(--animation-order, 0) * 0.1s);\n    opacity: 0;\n  }\n  \n  /* Add different animation delay for each card */\n  .products-grid .product-card:nth-child(1) { --animation-order: 1; }\n  .products-grid .product-card:nth-child(2) { --animation-order: 2; }\n  .products-grid .product-card:nth-child(3) { --animation-order: 3; }\n  .products-grid .product-card:nth-child(4) { --animation-order: 4; }\n  .products-grid .product-card:nth-child(5) { --animation-order: 5; }\n  .products-grid .product-card:nth-child(6) { --animation-order: 6; }\n  .products-grid .product-card:nth-child(7) { --animation-order: 7; }\n  .products-grid .product-card:nth-child(8) { --animation-order: 8; }\n  .products-grid .product-card:nth-child(9) { --animation-order: 9; }\n  .products-grid .product-card:nth-child(10) { --animation-order: 10; }\n  \n  /* Add pulse animation for CTA button */\n  @keyframes pulse {\n    0% {\n      box-shadow: 0 0 0 0 rgba(253, 126, 20, 0.7);\n    }\n    70% {\n      box-shadow: 0 0 0 10px rgba(253, 126, 20, 0);\n    }\n    100% {\n      box-shadow: 0 0 0 0 rgba(253, 126, 20, 0);\n    }\n  }\n  \n  .cta-button {\n    animation: pulse 2s infinite;\n  }",
    "ItemDetailPage.js": "import React, { useState, useRef } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { ChevronLeft, ChevronRight, Search, ShoppingCart, Heart } from \"lucide-react\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport itemData from \"../data/itemData.json\";\nimport \"../components/ItemDetailPage.css\";\n\nconst ItemDetailPage = () => {\n    const { id } = useParams();\n    const item = itemData.find(i => i.id === parseInt(id));\n\n    const [currentImageIndex, setCurrentImageIndex] = useState(0);\n    const [isZooming, setIsZooming] = useState(false);\n    const [zoomPosition, setZoomPosition] = useState({ x: 0, y: 0 });\n    const [quantity, setQuantity] = useState(1);\n    const [isFavorite, setIsFavorite] = useState(false);\n\n    const imageContainerRef = useRef(null);\n\n    if (!item) {\n        return (\n            <div className=\"not-found-container\">\n                <h2>Item not found</h2>\n                <p>The product you're looking for doesn't exist or has been removed.</p>\n                <Link to=\"/home\" className=\"back-link\">\n                    Back to Home\n                </Link>\n            </div>\n        );\n    }\n\n    const handleNextImage = () => {\n        setCurrentImageIndex((prevIndex) =>\n            prevIndex === item.images.length - 1 ? 0 : prevIndex + 1\n        );\n    };\n\n    const handlePrevImage = () => {\n        setCurrentImageIndex((prevIndex) =>\n            prevIndex === 0 ? item.images.length - 1 : prevIndex - 1\n        );\n    };\n\n    const handleDotClick = (index) => {\n        setCurrentImageIndex(index);\n    };\n\n    const handleZoomToggle = () => {\n        setIsZooming(!isZooming);\n    };\n\n    const handleMouseMove = (e) => {\n        if (!isZooming || !imageContainerRef.current) return;\n\n        const { left, top, width, height } = imageContainerRef.current.getBoundingClientRect();\n        const x = ((e.clientX - left) / width) * 100;\n        const y = ((e.clientY - top) / height) * 100;\n\n        setZoomPosition({ x, y });\n    };\n\n    const handleQuantityChange = (amount) => {\n        setQuantity(prev => Math.max(1, prev + amount));\n    };\n\n    const handleFavoriteToggle = () => {\n        setIsFavorite(!isFavorite);\n    };\n\n    return (\n        <div className=\"item-detail-container\">\n            <nav className=\"breadcrumb\">\n                <Link to=\"/home\">Home</Link> /\n                <Link to=\"/category\">Category</Link> /\n                <span>{item.title}</span>\n            </nav>\n\n            <div className=\"item-content\">\n                <div className=\"image-section\">\n                    <div\n                        ref={imageContainerRef}\n                        className={`image-container ${isZooming ? \"zooming\" : \"\"}`}\n                        onMouseMove={handleMouseMove}\n                        style={isZooming ? {\n                            cursor: \"zoom-in\"\n                        } : {}}\n                    >\n                        <AnimatePresence mode=\"wait\">\n                            <motion.img\n                                key={currentImageIndex}\n                                src={item.images[currentImageIndex]}\n                                alt={`${item.title} - view ${currentImageIndex + 1}`}\n                                className=\"main-image\"\n                                initial={{ opacity: 0 }}\n                                animate={{ opacity: 1 }}\n                                exit={{ opacity: 0 }}\n                                transition={{ duration: 0.3 }}\n                                style={isZooming ? {\n              transformOrigin: `${zoomPosition.x}% ${zoomPosition.y}%`,\n                                    transform: \"scale(2.5)\"\n                                } : {}}\n                            />\n                        </AnimatePresence>\n\n                        {/* Navigation arrows */}\n                        <button\n                            className=\"nav-button prev-button\"\n                            onClick={handlePrevImage}\n                            aria-label=\"Previous image\"\n                        >\n                            <ChevronLeft className=\"nav-icon\" />\n                        </button>\n\n                        <button\n                            className=\"nav-button next-button\"\n                            onClick={handleNextImage}\n                            aria-label=\"Next image\"\n                        >\n                            <ChevronRight className=\"nav-icon\" />\n                        </button>\n\n                        {/* Zoom button */}\n                        <button\n                            className=\"zoom-button\"\n                            onClick={handleZoomToggle}\n                            aria-label={isZooming ? \"Exit zoom mode\" : \"Enter zoom mode\"}\n                        >\n                            <Search className=\"zoom-icon\" />\n                        </button>\n                    </div>\n\n                    {/* Image pagination dots */}\n                    <div className=\"pagination-dots\">\n                        {item.images.map((_, index) => (\n                            <button\n                                key={index}\n                                className={`pagination-dot ${index === currentImageIndex ? \"active\" : \"\"}`}\n                                onClick={() => handleDotClick(index)}\n                                aria-label={`View image ${index + 1}`}\n                                aria-current={index === currentImageIndex}\n                            />\n                        ))}\n                    </div>\n\n                    {/* Thumbnail preview */}\n           <div className=\"thumbnail-container\">\n                        {item.images.map((image, index) => (\n                            <motion.div\n                                key={index}\n                                whileHover={{ scale: 1.05 }}\n                                whileTap={{ scale: 0.95 }}\n                            >\n                                <img\n                                    src={image}\n                                    alt={`Thumbnail ${index + 1}`}\n                                    className={`thumbnail ${index === currentImageIndex ? \"active\" : \"\"}`}\n                                    onClick={() => handleDotClick(index)}\n                                />\n                            </motion.div>\n                        ))}\n                    </div>\n                </div>\n\n                <div className=\"item-details\">\n                    <motion.h1\n                        className=\"item-title\"\n                        initial={{ opacity: 0, y: -20 }}\n                        animate={{ opacity: 1, y: 0 }}\n                        transition={{ duration: 0.5 }}\n                    >\n                        {item.title}\n                    </motion.h1>\n\n                    <motion.div\n                        className=\"price-container\"\n                        initial={{ opacity: 0, y: -10 }}\n                        animate={{ opacity: 1, y: 0 }}\n                        transition={{ duration: 0.5, delay: 0.1 }}\n                    >\n                        <span className=\"price\">${item.price.toFixed(2)}</span>\n                    </motion.div>\n\n                    <motion.div\n                        className=\"description-container\"\n                        initial={{ opacity: 0, y: -10 }}\n                        animate={{ opacity: 1, y: 0 }}\n                        transition={{ duration: 0.5, delay: 0.2 }}\n                    >\n                        <h3>Description</h3>\n                        <p className=\"item-description\">{item.description}</p>\n                    </motion.div>\n\n                    <motion.div\n                        className=\"purchase-options\"\n                        initial={{ opacity: 0, y: -10 }}\n                        animate={{ opacity: 1, y: 0 }}\n                        transition={{ duration: 0.5, delay: 0.3 }}\n                    >\n                        <div className=\"quantity-selector\">\n                            <span>Quantity:</span>\n                            <div className=\"quantity-controls\">\n                                <button\n                                    onClick={() => handleQuantityChange(-1)}\n                                    disabled={quantity <= 1}\n                                    aria-label=\"Decrease quantity\"\n                                >-</button>\n                                <span>{quantity}</span>\n                                <button\n                                    onClick={() => handleQuantityChange(1)}\n                      aria-label=\"Increase quantity\"\n                                >+</button>\n                            </div>\n                        </div>\n\n                        <div className=\"action-buttons\">\n                            <motion.button\n                                className=\"add-to-cart\"\n                                whileHover={{ scale: 1.05 }}\n                                whileTap={{ scale: 0.95 }}\n                            >\n                                <ShoppingCart size={18} />\n                                Add to Cart\n                            </motion.button>\n\n                            <motion.button\n                                className={`favorite-button ${isFavorite ? \"active\" : \"\"}`}\n                                onClick={handleFavoriteToggle}\n                                whileHover={{ scale: 1.1 }}\n                                whileTap={{ scale: 0.9 }}\n                                aria-label={isFavorite ? \"Remove from favorites\" : \"Add to favorites\"}\n                            >\n                                <Heart size={18} fill={isFavorite ? \"#e74c3c\" : \"none\"} />\n                            </motion.button>\n                        </div>\n\n                        <Link to={`/track/${item.id}`} className=\"track-link\">\n                            <motion.button\n                                className=\"track-button\"\n                                whileHover={{ scale: 1.03 }}\n                              whileTap={{ scale: 0.97 }}\n                            >\n                                Track Price Change\n                            </motion.button>\n                        </Link>\n                    </motion.div>\n\n                    <div className=\"item-meta\">\n                        <p className=\"sku\">SKU: {`PROD-${item.id}${item.title.substring(0, 3).toUpperCase()}`}</p>\n                        <p className=\"availability in-stock\">\n                            Availability: In Stock\n                        </p>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default ItemDetailPage;",
    "ItemDeatilPage.css": "/* Item Detail Page Styles */\n.item-detail-container {\n    max-width: 1200px;\n    margin: 0 auto;\n    padding: 2rem 1rem;\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n}\n\n/* Breadcrumb navigation */\n.breadcrumb {\n    margin-bottom: 2rem;\n    font-size: 0.9rem;\n    color: #6c757d;\n}\n\n.breadcrumb a {\n    color: #007bff;\n    text-decoration: none;\n    margin: 0 0.5rem;\n    transition: color 0.2s ease;\n}\n\n.breadcrumb a:first-child {\n    margin-left: 0;\n}\n\n.breadcrumb a:hover {\n    color: #0056b3;\n    text-decoration: underline;\n}\n\n/* Main content layout */\n.item-content {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    gap: 3rem;\n}\n\n@media (max-width: 768px) {\n    .item-content {\n        grid-template-columns: 1fr;\n        gap: 2rem;\n    }\n}\n\n/* Image section */\n.image-section {\n    position: relative;\n}\n\n.image-container {\n    position: relative;\n    overflow: hidden;\n    border-radius: 8px;\n    background-color: #f8f9fa;\n    aspect-ratio: 1 / 1;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);\n    transition: all 0.3s ease;\n}\n\n.image-container.zooming {\n    cursor: zoom-in;\n}\n\n.main-image {\n    width: 100%;\n    height: 100%;\n    object-fit: contain;\n    transition: transform 0.3s ease;\n    background-color: #fff;\n}\n\n/* Navigation buttons */\n.nav-button {\n    position: absolute;\n    top: 50%;\n    transform: translateY(-50%);\n    background-color: rgba(255, 255, 255, 0.8);\n    border: none;\n    border-radius: 50%;\n    width: 40px;\n    height: 40px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    cursor: pointer;\n    opacity: 0.7;\n    transition: opacity 0.3s ease, background-color 0.3s ease;\n    z-index: 2;\n    box-shadow: 0 2px 6px rgba(0, 0, 0, 0.1);\n}\n\n.nav-button:hover {\n    opacity: 1;\n    background-color: white;\n}\n\n.prev-button {\n    left: 10px;\n}\n\n.next-button {\n    right: 10px;\n}\n\n.nav-icon {\n    color: #333;\n    stroke-width: 2;\n}\n\n/* Zoom button */\n.zoom-button {\n    position: absolute;\n    bottom: 10px;\n    right: 10px;\n    background-color: rgba(255, 255, 255, 0.8);\n    border: none;\n    border-radius: 50%;\n    width: 36px;\n    height: 36px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    cursor: pointer;\n    opacity: 0.7;\n    transition: opacity 0.3s ease, background-color 0.3s ease;\n    z-index: 2;\n    box-shadow: 0 2px 6px rgba(0, 0, 0, 0.1);\n}\n\n.zoom-button:hover {\n    opacity: 1;\n    background-color: white;\n}\n\n.zoom-icon {\n    color: #333;\n    stroke-width: 2;\n}\n\n/* Pagination dots */\n.pagination-dots {\n    display: flex;\n    justify-content: center;\n    gap: 8px;\n    margin-top: 1rem;\n}\n\n.pagination-dot {\n    width: 10px;\n    height: 10px;\n    border-radius: 50%;\n    background-color: #dee2e6;\n    border: none;\n    cursor: pointer;\n    transition: transform 0.2s ease, background-color 0.2s ease;\n}\n\n.pagination-dot:hover {\n    transform: scale(1.2);\n}\n\n.pagination-dot.active {\n    background-color: #007bff;\n    transform: scale(1.2);\n}\n\n/* Thumbnail preview */\n.thumbnail-container {\n    display: flex;\n    gap: 10px;\n    margin-top: 1rem;\n    overflow-x: auto;\n    padding-bottom: 0.5rem;\n    scrollbar-width: thin;\n}\n\n.thumbnail-container::-webkit-scrollbar {\n    height: 6px;\n}\n\n.thumbnail-container::-webkit-scrollbar-track {\n    background: #f1f1f1;\n    border-radius: 10px;\n}\n\n.thumbnail-container::-webkit-scrollbar-thumb {\n    background: #888;\n    border-radius: 10px;\n}\n\n.thumbnail {\n    width: 70px;\n    height: 70px;\n    object-fit: cover;\n    border-radius: 4px;\n    cursor: pointer;\n    border: 2px solid transparent;\n    transition: border-color 0.2s ease, transform 0.2s ease;\n    background-color: #f8f9fa;\n}\n\n.thumbnail.active {\n    border-color: #007bff;\n}\n\n/* Item details section */\n.item-details {\n    display: flex;\n    flex-direction: column;\n    gap: 1.5rem;\n}\n\n.item-title {\n    font-size: 1.8rem;\n    margin: 0;\n    color: #212529;\n    line-height: 1.2;\n}\n\n.price-container {\n    display: flex;\n    align-items: center;\n    gap: 1rem;\n}\n\n.price {\n    font-size: 1.8rem;\n    font-weight: 700;\n    color: #212529;\n}\n\n.original-price {\n    font-size: 1.2rem;\n    color: #6c757d;\n    text-decoration: line-through;\n}\n\n.description-container h3 {\n    font-size: 1.1rem;\n    margin-bottom: 0.5rem;\n    color: #212529;\n}\n\n.item-description {\n    line-height: 1.6;\n    color: #495057;\n    margin: 0;\n}\n\n/* Purchase options */\n.purchase-options {\n    display: flex;\n    flex-direction: column;\n    gap: 1.5rem;\n    margin-top: 1rem;\n}\n\n.quantity-selector {\n    display: flex;\n    align-items: center;\n    gap: 1rem;\n}\n\n.quantity-controls {\n    display: flex;\n    align-items: center;\n    border: 1px solid #ced4da;\n    border-radius: 4px;\n    overflow: hidden;\n}\n\n.quantity-controls button {\n    background-color: #f8f9fa;\n    border: none;\n    width: 36px;\n    height: 36px;\n    font-size: 1.2rem;\n    cursor: pointer;\n    transition: background-color 0.2s ease;\n}\n\n.quantity-controls button:hover:not(:disabled) {\n    background-color: #e9ecef;\n}\n\n.quantity-controls button:disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n}\n\n.quantity-controls span {\n    padding: 0 1rem;\n    min-width: 40px;\n    text-align: center;\n}\n\n.action-buttons {\n    display: flex;\n    gap: 1rem;\n}\n\n.add-to-cart {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    gap: 0.5rem;\n    padding: 0.75rem 1.5rem;\n    background-color: #007bff;\n    color: white;\n    border: none;\n    border-radius: 4px;\n    font-weight: 600;\n    cursor: pointer;\n    transition: background-color 0.2s ease;\n    flex: 1;\n}\n\n.add-to-cart:hover {\n    background-color: #0069d9;\n}\n\n.favorite-button {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 42px;\n    height: 42px;\n    border-radius: 4px;\n    border: 1px solid #ced4da;\n    background-color: white;\n    cursor: pointer;\n    transition: background-color 0.2s ease, border-color 0.2s ease;\n}\n\n.favorite-button:hover,\n.favorite-button.active {\n    background-color: #fff5f5;\n    border-color: #e74c3c;\n}\n\n.track-button {\n    width: 100%;\n    padding: 0.75rem;\n    background-color: #f8f9fa;\n    border: 1px solid #ced4da;\n    border-radius: 4px;\n    color: #212529;\n    font-weight: 500;\n    cursor: pointer;\n    transition: background-color 0.2s ease;\n}\n\n.track-button:hover {\n    background-color: #e9ecef;\n}\n\n.track-link {\n    text-decoration: none;\n    display: block;\n    width: 100%;\n}\n\n/* Item metadata */\n.item-meta {\n    margin-top: 1rem;\n    padding-top: 1rem;\n    border-top: 1px solid #dee2e6;\n    font-size: 0.9rem;\n    color: #6c757d;\n}\n\n.item-meta p {\n    margin: 0.5rem 0;\n}\n\n.availability.in-stock {\n    color: #28a745;\n}\n\n.availability.low-stock {\n    color: #ffc107;\n}\n\n.availability.out-of-stock {\n    color: #dc3545;\n}\n\n/* Not found state */\n.not-found-container {\n    text-align: center;\n    padding: 3rem 1rem;\n    max-width: 600px;\n    margin: 0 auto;\n}\n\n.not-found-container h2 {\n    font-size: 1.8rem;\n    margin-bottom: 1rem;\n    color: #dc3545;\n}\n\n.back-link {\n    display: inline-block;\n    margin-top: 1.5rem;\n    padding: 0.75rem 1.5rem;\n    background-color: #007bff;\n    color: white;\n    text-decoration: none;\n    border-radius: 4px;\n    font-weight: 500;\n    transition: background-color 0.2s ease;\n}\n\n.back-link:hover {\n    background-color: #0069d9;\n}", "PriceTrackingPage.js": "import React, { useState, useEffect } from \"react\";\nimport { \n  LineChart, \n  Line, \n  XAxis, \n  YAxis, \n  CartesianGrid, \n  Tooltip, \n  Legend, \n  ResponsiveContainer,\n  ReferenceLine\n} from \"recharts\";\nimport { \n  TrendingUp, \n  TrendingDown, \n  AlertCircle, \n  Bell, \n  DollarSign,\n  Calendar,\n  List,\n  BarChart2,\n  Settings\n} from \"lucide-react\";\n\n// CSS styles for the component\nconst styles = {\n  container: {\n    maxWidth: \"1200px\",\n    margin: \"0 auto\",\n    padding: \"32px 16px\",\n    fontFamily: \"Arial, sans-serif\",\n  },\n  flexRow: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    gap: \"24px\",\n  },\n  flexColumn: {\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  sidebar: {\n    flex: \"1\",\n    maxWidth: \"350px\",\n  },\n  mainContent: {\n    flex: \"2\",\n  },\n  card: {\n    backgroundColor: \"#fff\",\n    borderRadius: \"8px\",\n    boxShadow: \"0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24)\",\n    padding: \"16px\",\n    marginBottom: \"24px\",\n    border: \"1px solid #e0e0e0\",\n  },\n  heading: {\n    fontSize: \"24px\",\n    fontWeight: \"bold\",\n    color: \"#333\",\n    marginBottom: \"8px\",\n  },\n  subheading: {\n    fontSize: \"18px\",\n    fontWeight: \"600\",\n    color: \"#333\",\n    marginBottom: \"12px\",\n  },\n  smallHeading: {\n    fontSize: \"16px\",\n    fontWeight: \"600\",\n    color: \"#333\",\n    marginBottom: \"8px\",\n  },\n  text: {\n    fontSize: \"14px\",\n    color: \"#555\",\n    marginBottom: \"8px\",\n    lineHeight: \"1.5\",\n  },\n  grid: {\n    display: \"grid\",\n    gridTemplateColumns: \"repeat(auto-fit, minmax(200px, 1fr))\",\n    gap: \"12px\",\n    marginBottom: \"24px\",\n  },\n  statCard: {\n    padding: \"12px\",\n    backgroundColor: \"#fff\",\n    borderRadius: \"8px\",\n    border: \"1px solid #e0e0e0\",\n    boxShadow: \"0 1px 2px rgba(0,0,0,0.05)\",\n  },\n  iconWithText: {\n    display: \"flex\",\n    alignItems: \"center\",\n    gap: \"8px\",\n  },\n  button: {\n    padding: \"8px 16px\",\n    borderRadius: \"4px\",\n    border: \"none\",\n    cursor: \"pointer\",\n    fontSize: \"14px\",\n    fontWeight: \"500\",\n  },\n  primaryButton: {\n    backgroundColor: \"#3b82f6\",\n    color: \"white\",\n    transition: \"background-color 0.2s\",\n  },\n  buttonGroup: {\n    display: \"flex\",\n    gap: \"8px\",\n    marginBottom: \"16px\",\n  },\n  activeButton: {\n    backgroundColor: \"#3b82f6\",\n    color: \"white\",\n  },\n  inactiveButton: {\n    backgroundColor: \"#e5e7eb\",\n    color: \"#4b5563\",\n  },\n  badge: {\n    padding: \"4px 12px\",\n    borderRadius: \"16px\",\n    display: \"inline-flex\",\n    alignItems: \"center\",\n    fontSize: \"14px\",\n    fontWeight: \"500\",\n    marginRight: \"8px\",\n    marginBottom: \"8px\",\n  },\n  blueBadge: {\n    backgroundColor: \"#e1f0ff\",\n    color: \"#0069d9\",\n    border: \"1px solid #b8daff\",\n  },\n  greenBadge: {\n    backgroundColor: \"#e3f9e5\",\n    color: \"#198754\",\n    border: \"1px solid #c3e6cb\",\n  },\n  redBadge: {\n    backgroundColor: \"#ffebee\",\n    color: \"#d32f2f\",\n    border: \"1px solid #f5c2c7\",\n  },\n  purpleBadge: {\n    backgroundColor: \"#f3e5f5\",\n    color: \"#6f42c1\",\n    border: \"1px solid #d8b5e3\",\n  },\n  alertBox: {\n    backgroundColor: \"#e6f7ff\",\n    borderRadius: \"4px\",\n    padding: \"12px\",\n    border: \"1px solid #91caff\",\n    marginTop: \"12px\",\n    fontSize: \"14px\",\n    color: \"#0055b3\",\n  },\n  formGroup: {\n    marginBottom: \"16px\",\n  },\n  label: {\n    display: \"block\",\n    fontSize: \"14px\",\n    color: \"#555\",\n    marginBottom: \"4px\",\n  },\n  input: {\n    width: \"100%\", \n    padding: \"8px\",\n    borderRadius: \"4px\",\n    border: \"1px solid #ccc\",\n    fontSize: \"14px\",\n  },\n  inputGroup: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  inputPrepend: {\n    backgroundColor: \"#f0f0f0\",\n    padding: \"8px 12px\",\n    borderTopLeftRadius: \"4px\",\n    borderBottomLeftRadius: \"4px\",\n    border: \"1px solid #ccc\",\n    borderRight: \"none\",\n  },\n  inputRounded: {\n    borderTopLeftRadius: \"0\",\n    borderBottomLeftRadius: \"0\",\n  },\n  table: {\n    width: \"100%\",\n    borderCollapse: \"collapse\",\n  },\n  tableHeader: {\n    backgroundColor: \"#f9fafb\",\n    borderBottom: \"1px solid #e5e7eb\",\n    textAlign: \"left\",\n  },\n  tableHeaderCell: {\n    padding: \"12px 16px\", \n    fontSize: \"14px\",\n    color: \"#4b5563\",\n    fontWeight: \"600\",\n  },\n  tableRow: {\n    borderBottom: \"1px solid #e5e7eb\",\n  },\n  tableRowAlt: {\n    backgroundColor: \"#f9fafb\",\n  },\n  tableCell: {\n    padding: \"12px 16px\",\n    fontSize: \"14px\",\n    color: \"#333\",\n  },\n  productImage: {\n    width: \"100%\",\n    height: \"200px\",\n    objectFit: \"cover\",\n    borderRadius: \"4px\",\n    marginBottom: \"12px\",\n  },\n  ratingStars: {\n    display: \"flex\",\n    marginRight: \"8px\",\n  },\n  star: {\n    fontSize: \"18px\",\n  },\n  starFilled: {\n    color: \"#ffc107\",\n  },\n  starEmpty: {\n    color: \"#e0e0e0\",\n  },\n  priceInfoRow: {\n    display: \"flex\", \n    justifyContent: \"space-between\",\n    fontSize: \"14px\",\n    margin: \"8px 0\",\n  },\n  greenText: {\n    color: \"#10b981\",\n  },\n  redText: {\n    color: \"#ef4444\",\n  },\n  blueText: {\n    color: \"#3b82f6\",\n  },\n  grayText: {\n    color: \"#6b7280\",\n  },\n  divider: {\n    borderTop: \"1px solid #e5e7eb\",\n    margin: \"16px 0\",\n  },\n  chartControlsContainer: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    marginBottom: \"16px\",\n    flexWrap: \"wrap\",\n    gap: \"12px\",\n  },\n  toggleContainer: {\n    display: \"inline-flex\",\n    backgroundColor: \"#f3f4f6\",\n    borderRadius: \"4px\",\n    padding: \"4px\",\n  },\n  toggleButton: {\n    padding: \"8px 12px\",\n    borderRadius: \"4px\",\n    border: \"none\",\n    backgroundColor: \"transparent\",\n    cursor: \"pointer\",\n    display: \"flex\",\n    alignItems: \"center\",\n    gap: \"4px\",\n    fontSize: \"14px\",\n  },\n  select: {\n    padding: \"6px 8px\",\n    borderRadius: \"4px\",\n    border: \"1px solid #ccc\",\n    backgroundColor: \"white\",\n    fontSize: \"14px\",\n  },\n  tooltipBox: {\n    backgroundColor: \"white\",\n    padding: \"16px\",\n    boxShadow: \"0 2px 12px rgba(0,0,0,0.15)\",\n    borderRadius: \"4px\",\n    border: \"1px solid #e0e0e0\",\n    minWidth: \"150px\",\n  },\n  tooltipTitle: {\n    fontWeight: \"bold\",\n    color: \"#333\",\n    marginBottom: \"4px\",\n  },\n  tooltipPrice: {\n    color: \"#3b82f6\",\n    fontWeight: \"500\",\n    marginBottom: \"8px\",\n  },\n  tooltipDivider: {\n    borderTop: \"1px solid #e5e7eb\",\n    margin: \"8px 0\",\n  },\n  tooltipDetail: {\n    fontSize: \"12px\",\n    margin: \"4px 0\",\n  },\n  responsiveContainer: {\n    width: \"100%\",\n    height: \"400px\",\n  },\n  // Media query simulation - we'll apply these with JavaScript conditionally\n  mobileStyles: {\n    flexRow: {\n      flexDirection: \"column\",\n    },\n    sidebar: {\n      maxWidth: \"100%\",\n    },\n    grid: {\n      gridTemplateColumns: \"repeat(2, 1fr)\",\n    }\n  }\n};\n\n// Mock product images\nconst productImages = {\n  item1: \"https://via.placeholder.com/400x320\",\n  item2: \"https://via.placeholder.com/400x320\",\n  item3: \"https://via.placeholder.com/400x320\"\n};\n\n// Mock product info\nconst productInfo = {\n  item1: {\n    name: \"Premium Wireless Headphones\",\n    brand: \"AudioTech\",\n    rating: 4.5,\n    reviews: 128,\n    msrp: 129.99,\n    lowestPrice: 97,\n    highestPrice: 105\n  },\n  item2: {\n    name: \"Smart Fitness Tracker\",\n    brand: \"TechFit\",\n    rating: 4.3,\n    reviews: 96,\n    msrp: 149.99,\n    lowestPrice: 97,\n    highestPrice: 130\n  },\n  item3: {\n    name: \"Wireless Charging Pad\",\n    brand: \"PowerPlus\",\n    rating: 4.0,\n    reviews: 75,\n    msrp: 139.99,\n    lowestPrice: 97,\n    highestPrice: 129\n  }\n};\n\n// Enhanced mock price data with additional metrics\nconst mockPriceData = {\n  item1: [\n    { month: \"Jan\", price: 99, avg: 101, min: 95, max: 105 },\n    { month: \"Feb\", price: 105, avg: 102, min: 97, max: 107 },\n    { month: \"Mar\", price: 102, avg: 103, min: 98, max: 108 },\n    { month: \"Apr\", price: 97, avg: 99, min: 95, max: 104 },\n    { month: \"May\", price: 103, avg: 101, min: 97, max: 106 },\n    { month: \"Jun\", price: 98, avg: 100, min: 96, max: 105 },\n    { month: \"Jul\", price: 99, avg: 101, min: 97, max: 106 },\n    { month: \"Aug\", price: 105, avg: 103, min: 99, max: 108 },\n    { month: \"Sep\", price: 102, avg: 103, min: 98, max: 109 },\n    { month: \"Oct\", price: 97, avg: 100, min: 95, max: 105 },\n    { month: \"Nov\", price: 103, avg: 102, min: 97, max: 107 },\n    { month: \"Dec\", price: 98, avg: 100, min: 94, max: 104 }\n  ],\n  item2: [\n    { month: \"Jan\", price: 129, avg: 125, min: 120, max: 130 },\n    { month: \"Feb\", price: 125, avg: 126, min: 122, max: 131 },\n    { month: \"Mar\", price: 123, avg: 125, min: 120, max: 129 },\n    { month: \"Apr\", price: 130, avg: 127, min: 123, max: 132 },\n    { month: \"May\", price: 127, avg: 126, min: 121, max: 130 },\n    { month: \"Jun\", price: 126, avg: 124, min: 118, max: 128 },\n    { month: \"Jul\", price: 99, avg: 110, min: 97, max: 120 },\n    { month: \"Aug\", price: 105, avg: 103, min: 99, max: 108 },\n    { month: \"Sep\", price: 102, avg: 103, min: 98, max: 109 },\n    { month: \"Oct\", price: 97, avg: 100, min: 95, max: 105 },\n    { month: \"Nov\", price: 103, avg: 102, min: 97, max: 107 },\n    { month: \"Dec\", price: 98, avg: 100, min: 94, max: 104 }\n  ],\n  item3: [\n    { month: \"Jan\", price: 129, avg: 125, min: 120, max: 130 },\n    { month: \"Feb\", price: 125, avg: 126, min: 122, max: 131 },\n    { month: \"Mar\", price: 123, avg: 125, min: 120, max: 129 },\n    { month: \"Apr\", price: 130, avg: 127, min: 123, max: 132 },\n    { month: \"May\", price: 127, avg: 126, min: 121, max: 130 },\n    { month: \"Jun\", price: 126, avg: 124, min: 118, max: 128 },\n    { month: \"Jul\", price: 99, avg: 110, min: 97, max: 120 },\n    { month: \"Aug\", price: 105, avg: 103, min: 99, max: 108 },\n    { month: \"Sep\", price: 102, avg: 103, min: 98, max: 109 },\n    { month: \"Oct\", price: 97, avg: 100, min: 95, max: 105 },\n    { month: \"Nov\", price: 103, avg: 102, min: 97, max: 107 },\n    { month: \"Dec\", price: 98, avg: 100, min: 94, max: 104 }\n  ]\n};\n\n// Custom tooltip component for the chart\nconst CustomTooltip = ({ active, payload, label }) => {\n  if (active && payload && payload.length) {\n    const currentData = payload[0].payload;\n    \n    return (\n      <div style={styles.tooltipBox}>\n        <p style={styles.tooltipTitle}>{label}</p>\n        <p style={styles.tooltipPrice}>\n          Price: ${payload[0].value.toFixed(2)}\n        </p>\n        <div style={styles.tooltipDivider}></div>\n        <p style={{...styles.tooltipDetail, color: '#6b7280'}}>Market Average: ${currentData.avg.toFixed(2)}</p>\n        <p style={{...styles.tooltipDetail, color: '#10b981'}}>Min: ${currentData.min.toFixed(2)}</p>\n        <p style={{...styles.tooltipDetail, color: '#ef4444'}}>Max: ${currentData.max.toFixed(2)}</p>\n      </div>\n    );\n  }\n  return null;\n};\n\n// Custom price badge component\nconst PriceBadge = ({ type, price }) => {\n  let badgeStyle;\n  \n  switch(type) {\n    case 'current':\n      badgeStyle = {...styles.badge, ...styles.blueBadge};\n      break;\n    case 'lowest':\n      badgeStyle = {...styles.badge, ...styles.greenBadge};\n      break;\n    case 'highest':\n      badgeStyle = {...styles.badge, ...styles.redBadge};\n      break;\n    case 'msrp':\n      badgeStyle = {...styles.badge, ...styles.purpleBadge};\n      break;\n    default:\n      badgeStyle = {...styles.badge, ...styles.blueBadge};\n  }\n  \n  return (\n    <div style={badgeStyle}>\n      <DollarSign size={16} style={{marginRight: '4px'}} />\n      <span>{price}</span>\n    </div>\n  );\n};\n\n// Price notification component\nconst PriceAlertForm = ({ currentPrice }) => {\n  const [targetPrice, setTargetPrice] = useState(currentPrice - 5);\n  \n  return (\n    <div style={{...styles.card, backgroundColor: \"#f9fafb\"}}>\n      <div style={styles.iconWithText}>\n        <Bell size={18} color=\"#3b82f6\" />\n        <h3 style={styles.smallHeading}>Price Alert</h3>\n      </div>\n      \n      <div style={styles.formGroup}>\n        <label style={styles.label}>Notify me when price drops below:</label>\n        <div style={styles.inputGroup}>\n          <span style={styles.inputPrepend}>$</span>\n          <input\n            type=\"number\"\n            value={targetPrice}\n            onChange={(e) => setTargetPrice(Number(e.target.value))}\n            style={{...styles.input, ...styles.inputRounded}}\n          />\n        </div>\n      </div>\n      \n      <button style={{...styles.button, ...styles.primaryButton, width: \"100%\"}}>\n        <div style={styles.iconWithText}>\n          <Bell size={16} />\n          <span>Set Alert</span>\n        </div>\n      </button>\n    </div>\n  );\n};\n\n// Chart control panel component\nconst ChartControls = ({ viewMode, setViewMode, timeRange, setTimeRange }) => {\n  return (\n    <div style={styles.chartControlsContainer}>\n      <div style={styles.toggleContainer}>\n        <button\n          onClick={() => setViewMode('line')}\n          style={{\n            ...styles.toggleButton,\n            ...(viewMode === 'line' ? styles.activeButton : styles.inactiveButton)\n          }}\n        >\n          <TrendingUp size={16} />\n          <span>Line</span>\n        </button>\n        <button\n          onClick={() => setViewMode('bar')}\n          style={{\n            ...styles.toggleButton,\n            ...(viewMode === 'bar' ? styles.activeButton : styles.inactiveButton)\n          }}\n        >\n          <BarChart2 size={16} />\n          <span>Detail</span>\n        </button>\n      </div>\n      \n      <div style={styles.iconWithText}>\n        <span style={styles.grayText}>Time Range:</span>\n        <select\n          value={timeRange}\n          onChange={(e) => setTimeRange(e.target.value)}\n          style={styles.select}\n        >\n          <option value=\"3\">3 Months</option>\n          <option value=\"6\">6 Months</option>\n          <option value=\"12\">1 Year</option>\n        </select>\n      </div>\n    </div>\n  );\n};\n\n// Product detail sidebar component\nconst ProductSidebar = ({ productData, currentPrice }) => {\n  // Create star rating display\n  const renderStars = () => {\n    const stars = [];\n    for (let i = 0; i < 5; i++) {\n      stars.push(\n        <span \n          key={i} \n          style={{\n            ...styles.star, \n            ...(i < Math.floor(productData.rating) ? styles.starFilled : styles.starEmpty)\n          }}\n        >\n          \u2605\n        </span>\n      );\n    }\n    return <div style={styles.ratingStars}>{stars}</div>;\n  };\n\n  return (\n    <div style={styles.card}>\n      <div>\n        <img \n          src={productImages[`item${productData.id}`]} \n          alt={productData.name} \n          style={styles.productImage}\n        />\n        <h2 style={styles.subheading}>{productData.name}</h2>\n        <p style={styles.grayText}>{productData.brand}</p>\n        \n        <div style={{...styles.iconWithText, marginTop: \"8px\", marginBottom: \"12px\"}}>\n          {renderStars()}\n          <span style={styles.grayText}>({productData.reviews} reviews)</span>\n        </div>\n      </div>\n      \n      <div style={styles.divider}></div>\n      \n      <div>\n        <div style={{display: \"flex\", flexWrap: \"wrap\", gap: \"8px\", marginBottom: \"12px\"}}>\n          <PriceBadge type=\"current\" price={`$${currentPrice}`} />\n          <PriceBadge type=\"msrp\" price={`$${productData.msrp}`} />\n        </div>\n        \n        <div style={styles.priceInfoRow}>\n          <div style={{...styles.iconWithText, ...styles.greenText}}>\n            <TrendingDown size={16} />\n            <span>Lowest: ${productData.lowestPrice}</span>\n          </div>\n          <div style={{...styles.iconWithText, ...styles.redText}}>\n            <TrendingUp size={16} />\n            <span>Highest: ${productData.highestPrice}</span>\n          </div>\n        </div>\n        \n        <div style={styles.alertBox}>\n          <div style={{...styles.iconWithText, alignItems: \"flex-start\"}}>\n            <AlertCircle size={18} color=\"#3b82f6\" style={{marginTop: \"2px\"}} />\n            <p style={styles.blueText}>\n              Price is <strong>{currentPrice === productData.lowestPrice ? 'at the lowest' : \n              (currentPrice < productData.msrp ? `${Math.round((1 - currentPrice/productData.msrp) * 100)}% below MSRP` : \n              'at MSRP')}</strong>. Good time to buy!\n            </p>\n          </div>\n        </div>\n      </div>\n      \n      <div style={styles.divider}></div>\n      \n      <PriceAlertForm currentPrice={currentPrice} />\n    </div>\n  );\n};\n\n// Price statistics component\nconst PriceStats = ({ priceData }) => {\n  // Calculate statistics\n  const prices = priceData.map(item => item.price);\n  const average = prices.reduce((sum, price) => sum + price, 0) / prices.length;\n  const min = Math.min(...prices);\n  const max = Math.max(...prices);\n  const current = prices[prices.length - 1];\n  \n  // Calculate percent change from previous month\n  const previousPrice = prices.length > 1 ? prices[prices.length - 2] : current;\n  const percentChange = ((current - previousPrice) / previousPrice) * 100;\n  \n  const stats = [\n    { label: \"Current\", value: `$${current}`, \n      icon: <DollarSign size={18} color=\"#3b82f6\" /> },\n    { label: \"Average\", value: `$${average.toFixed(2)}`, \n      icon: <Settings size={18} color=\"#6b7280\" /> },\n    { label: \"Lowest\", value: `$${min}`, \n      icon: <TrendingDown size={18} color=\"#10b981\" /> },\n    { label: \"Highest\", value: `$${max}`, \n      icon: <TrendingUp size={18} color=\"#ef4444\" /> },\n  ];\n\n  return (\n    <div style={styles.grid}>\n      {stats.map((stat, index) => (\n        <div key={index} style={styles.statCard}>\n          <div style={styles.iconWithText}>\n            {stat.icon}\n            <span style={styles.grayText}>{stat.label}</span>\n          </div>\n          <div style={{fontSize: \"20px\", fontWeight: \"600\", color: \"#333\"}}>{stat.value}</div>\n          \n          {stat.label === \"Current\" && (\n            <div style={{\n              fontSize: \"12px\", \n              marginTop: \"4px\", \n              color: percentChange > 0 ? \"#ef4444\" : \"#10b981\"\n            }}>\n              {percentChange.toFixed(1)}% {percentChange > 0 ? '\u2191' : '\u2193'} from last month\n            </div>\n          )}\n        </div>\n      ))}\n    </div>\n  );\n};\n\n// Table view component\nconst PriceTable = ({ priceData }) => {\n  return (\n    <div style={styles.card}>\n      <div style={{overflowX: \"auto\"}}>\n        <table style={styles.table}>\n          <thead style={styles.tableHeader}>\n            <tr>\n              <th style={styles.tableHeaderCell}>Month</th>\n              <th style={styles.tableHeaderCell}>Price ($)</th>\n              <th style={styles.tableHeaderCell}>Avg. Market Price ($)</th>\n              <th style={styles.tableHeaderCell}>Min ($)</th>\n              <th style={styles.tableHeaderCell}>Max ($)</th>\n            </tr>\n          </thead>\n          <tbody>\n            {priceData.map((entry, index) => (\n              <tr key={index} style={{\n                ...styles.tableRow,\n                ...(index % 2 === 0 ? {} : styles.tableRowAlt)\n              }}>\n                <td style={styles.tableCell}>{entry.month}</td>\n                <td style={{...styles.tableCell, color: \"#3b82f6\", fontWeight: \"500\"}}>${entry.price}</td>\n                <td style={styles.tableCell}>${entry.avg}</td>\n                <td style={{...styles.tableCell, color: \"#10b981\"}}>${entry.min}</td>\n                <td style={{...styles.tableCell, color: \"#ef4444\"}}>${entry.max}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n\nconst PriceTrackingPage = ({ id = \"1\" }) => {\n  // Default to item1 if no ID is provided\n  const itemId = `item${id}`;\n  const priceData = mockPriceData[itemId] || [];\n  \n  // State for view preferences\n  const [viewMode, setViewMode] = useState('line');\n  const [timeRange, setTimeRange] = useState('12');\n  const [dataView, setDataView] = useState('chart');\n  const [isMobile, setIsMobile] = useState(false);\n  \n  // Check window size for responsive design\n  useEffect(() => {\n    const checkMobile = () => {\n      setIsMobile(window.innerWidth < 768);\n    };\n    \n    checkMobile();\n    window.addEventListener('resize', checkMobile);\n    \n    return () => {\n      window.removeEventListener('resize', checkMobile);\n    };\n  }, []);\n  \n  // Filter data based on time range\n  const filteredData = priceData.slice(-parseInt(timeRange));\n  \n  // Get current price (most recent)\n  const currentPrice = priceData.length > 0 ? priceData[priceData.length - 1].price : 0;\n  \n  // Get product information\n  const product = { ...productInfo[itemId], id };\n\n  // Calculate the average price line data\n  const avgPrice = filteredData.reduce((sum, item) => sum + item.price, 0) / filteredData.length;\n  \n  // Define the chart colors\n  const chartColors = {\n    price: \"#3b82f6\", // blue\n    average: \"#9ca3af\", // gray\n    min: \"#10b981\", // green\n    max: \"#ef4444\"  // red\n  };\n\n  return (\n    <div style={styles.container}>\n      <div style={{\n        ...styles.flexRow,\n        ...(isMobile ? styles.mobileStyles.flexRow : {})\n      }}>\n        {/* Product information sidebar */}\n        <div style={{\n          ...styles.sidebar,\n          ...(isMobile ? styles.mobileStyles.sidebar : {})\n        }}>\n          <ProductSidebar productData={product} currentPrice={currentPrice} />\n        </div>\n        \n        {/* Main content area */}\n        <div style={styles.mainContent}>\n          <div style={{marginBottom: \"24px\"}}>\n            <h1 style={styles.heading}>\n              Price History: {product.name}\n            </h1>\n            <p style={styles.text}>\n              Track price changes over time and set alerts for the best time to buy.\n            </p>\n          </div>\n          \n          {/* Price statistics section */}\n          <PriceStats priceData={filteredData} />\n          \n          {/* Chart/Table toggle */}\n          <div style={{\n            ...styles.toggleContainer,\n            display: \"inline-flex\",\n            marginBottom: \"16px\"\n          }}>\n            <button\n              onClick={() => setDataView('chart')}\n              style={{\n                ...styles.toggleButton,\n                ...(dataView === 'chart' ? styles.activeButton : styles.inactiveButton)\n              }}\n            >\n              <BarChart2 size={16} />\n              <span>Chart</span>\n            </button>\n            <button\n              onClick={() => setDataView('table')}\n              style={{\n                ...styles.toggleButton,\n                ...(dataView === 'table' ? styles.activeButton : styles.inactiveButton)\n              }}\n            >\n              <List size={16} />\n              <span>Table</span>\n            </button>\n          </div>\n          \n          {/* Chart controls */}\n          {dataView === 'chart' && (\n            <ChartControls \n              viewMode={viewMode} \n              setViewMode={setViewMode} \n              timeRange={timeRange} \n              setTimeRange={setTimeRange} \n            />\n          )}\n          \n          {/* Price data visualization */}\n          {dataView === 'chart' ? (\n            <div style={styles.card}>\n              <div style={styles.responsiveContainer}>\n              <ResponsiveContainer width=\"100%\" height={400}>\n                  {viewMode === 'line' ? (\n                    <LineChart data={filteredData}>\n                      <CartesianGrid strokeDasharray=\"3 3\" />\n                      <XAxis dataKey=\"month\" />\n                      <YAxis domain={['dataMin - 5', 'dataMax + 5']} />\n                      <Tooltip content={<CustomTooltip />} />\n                      <Legend />\n                      <ReferenceLine y={avgPrice} label=\"Avg\" stroke={chartColors.average} strokeDasharray=\"3 3\" />\n                      <Line \n                        type=\"monotone\" \n                        dataKey=\"price\" \n                        stroke={chartColors.price} \n                        strokeWidth={2} \n                        dot={{ r: 4 }} \n                        activeDot={{ r: 6 }} \n                        name=\"Product Price\" \n                      />\n                    </LineChart>\n                  ) : (\n                    <LineChart data={filteredData}>\n                      <CartesianGrid strokeDasharray=\"3 3\" />\n                      <XAxis dataKey=\"month\" />\n                      <YAxis domain={['dataMin - 5', 'dataMax + 5']} />\n                      <Tooltip content={<CustomTooltip />} />\n                      <Legend />\n                      <Line \n                        type=\"monotone\" \n                        dataKey=\"price\" \n                        stroke={chartColors.price} \n                        strokeWidth={2} \n                        dot={{ r: 4 }} \n                        activeDot={{ r: 6 }} \n                        name=\"Product Price\" \n                      />\n                      <Line \n                        type=\"monotone\" \n                        dataKey=\"avg\" \n                        stroke={chartColors.average} \n                        strokeDasharray=\"3 3\" \n                        name=\"Market Average\" \n                      />\n                      <Line \n               type=\"monotone\" \n                        dataKey=\"min\" \n                        stroke={chartColors.min} \n                        name=\"Lowest Price\" \n                      />\n                      <Line \n                        type=\"monotone\" \n                        dataKey=\"max\" \n                        stroke={chartColors.max} \n                        name=\"Highest Price\" \n                      />\n                    </LineChart>\n                  )}\n                </ResponsiveContainer>\n              </div>\n            </div>\n          ) : (\n            <PriceTable priceData={filteredData} />\n          )}\n          \n          {/* Recommendations section */}\n          <div style={styles.card}>\n            <h3 style={styles.subheading}>Price Analysis & Recommendations</h3>\n            <p style={styles.text}>\n              Based on historical pricing data, this product is currently {\n                currentPrice <= product.lowestPrice ? (\n                  <span style={styles.greenText}>at its lowest price point</span>\n                ) : currentPrice >= product.highestPrice ? (\n                  <span style={styles.redText}>at its highest price point</span>\n                ) : (\n                  <span>priced at <strong>${currentPrice}</strong>, which is {\n                    currentPrice < avgPrice ? (\n                      <span style={styles.greenText}>${(avgPrice - currentPrice).toFixed(2)} below</span>\n                    ) : (\n                      <span style={styles.redText}>${(currentPrice - avgPrice).toFixed(2)} above</span>\n                    )\n                  } the average market price of <strong>${avgPrice.toFixed(2)}</strong></span>\n                )\n              }.\n            </p>\n            \n            <div style={styles.divider}></div>\n            \n            <div style={styles.iconWithText}>\n              <Calendar size={18} color=\"#3b82f6\" />\n              <h4 style={styles.smallHeading}>Best Time to Buy</h4>\n            </div>\n            <p style={styles.text}>\n              Historically, prices for this product tend to be lowest during {\n                priceData.reduce((lowest, current, index) => \n                  current.price < priceData[lowest].price ? index : lowest, 0\n                ) % 12 < 3 ? \"Q1 (January-March)\" : \n                priceData.reduce((lowest, current, index) => \n                  current.price < priceData[lowest].price ? index : lowest, 0\n                ) % 12 < 6 ? \"Q2 (April-June)\" : \n                priceData.reduce((lowest, current, index) => \n                  current.price < priceData[lowest].price ? index : lowest, 0\n                ) % 12 < 9 ? \"Q3 (July-September)\" : \"Q4 (October-December)\"\n              }. \n              {currentPrice <= (avgPrice * 0.95) ? (\n                <span style={styles.greenText}> Current price is a good deal compared to typical market prices.</span>\n              ) : currentPrice >= (avgPrice * 1.05) ? (\n                <span style={styles.redText}> You might want to wait for a price drop.</span>\n              ) : (\n                <span> Current price is close to the average market price.</span>\n              )}\n            </p>\n          </div>\n          \n          {/* Similar products section */}\n          <div style={styles.card}>\n            <h3 style={styles.subheading}>Similar Products</h3>\n            <div style={{\n              ...styles.grid,\n              ...(isMobile ? styles.mobileStyles.grid : {})\n            }}>\n              {Object.keys(productInfo)\n                .filter(key => key !== itemId)\n                .map((key, index) => {\n                  const similarProduct = productInfo[key];\n                  const similarProductPrice = mockPriceData[key][mockPriceData[key].length - 1].price;\n                  \n                  return (\n                    <div key={index} style={{padding: \"8px\"}}>\n                      <img \n                        src={productImages[key]} \n                        alt={similarProduct.name} \n                        style={{...styles.productImage, height: \"120px\"}}\n                      />\n                      <h4 style={{fontSize: \"14px\", fontWeight: \"600\"}}>{similarProduct.name}</h4>\n                      <div style={{\n                        display: \"flex\", \n                        justifyContent: \"space-between\",\n                        alignItems: \"center\",\n                        marginTop: \"4px\"\n                      }}>\n                        <span style={{...styles.blueText, fontWeight: \"600\"}}>${similarProductPrice}</span>\n                        <button style={{...styles.button, ...styles.primaryButton, padding: \"4px 8px\", fontSize: \"12px\"}}>\n                          View\n                        </button>\n                      </div>\n                    </div>\n                  );\n                })}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PriceTrackingPage;",
    "PriceTrackingPage.css": "",
    "PriceTrackingChart.js": "import React from 'react';\nimport {\n  ResponsiveContainer,\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n} from 'recharts';\nimport PropTypes from 'prop-types';\n\n/**\n * Reusable price tracking line chart.\n */\nconst PriceTrackingChart = ({ data }) => {\n  if (!data?.length) return <p style={{ textAlign: 'center' }}>No price data available.</p>;\n\n  return (\n    <div style={{ width: '100%', height: 300 }}>\n      <ResponsiveContainer>\n        <LineChart data={data} margin={{ top: 20, right: 30, left: 10, bottom: 5 }}>\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"month\" />\n          <YAxis />\n          <Tooltip />\n          <Line\n            type=\"monotone\"\n            dataKey=\"price\"\n            stroke=\"#8884d8\"\n            strokeWidth={2}\n            activeDot={{ r: 6 }}\n            dot={{ r: 4 }}\n          />\n        </LineChart>\n      </ResponsiveContainer>\n    </div>\n  );\n};\n\nPriceTrackingChart.propTypes = {\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      month: PropTypes.string.isRequired,\n      price: PropTypes.number.isRequired,\n    })\n  ).isRequired,\n};\n\nexport default PriceTrackingChart;",
    "PriceTrackingChart.css": ""
}