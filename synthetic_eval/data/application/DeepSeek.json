{
    "HomePage.js": "import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { getCurrentUser } from \"../utils/fakeUserService\";\nimport itemData from \"../data/itemData.json\";\nimport \"./HomePage.css\";\nimport FavoriteBorderIcon from '@mui/icons-material/FavoriteBorder';\nimport FavoriteIcon from '@mui/icons-material/Favorite';\nimport AddShoppingCartIcon from '@mui/icons-material/AddShoppingCart';\n\nconst HomePage = () => {\n  const user = getCurrentUser();\n  const [hoveredItem, setHoveredItem] = useState(null);\n  const [favorites, setFavorites] = useState(new Set());\n\n  const handleFavorite = (itemId) => {\n    const newFavorites = new Set(favorites);\n    newFavorites.has(itemId) ? newFavorites.delete(itemId) : newFavorites.add(itemId);\n    setFavorites(newFavorites);\n  };\n\n  return (\n    <div className=\"home-page\">\n      <nav className=\"top-nav\">\n        <Link to=\"/\" className=\"logo\">E-Shop</Link>\n        <div className=\"nav-controls\">\n          <input type=\"text\" placeholder=\"Search products...\" className=\"search-bar\" />\n          <div className=\"user-actions\">\n            <Link to=\"/cart\" className=\"cart-icon\">\n              <AddShoppingCartIcon />\n            </Link>\n            <Link to=\"/settings\" className=\"user-avatar\">\n              {user ? user.username.charAt(0) : 'G'}\n            </Link>\n          </div>\n        </div>\n      </nav>\n\n      <section className=\"hero\">\n        <div className=\"hero-content\">\n          <h1>Summer Collection 2024</h1>\n          <p>Discover our premium selection at exclusive prices</p>\n          <Link to=\"/price-tracking\" className=\"cta-button\">Shop Now \u2192</Link>\n        </div>\n      </section>\n\n      <main className=\"main-content\">\n        <div className=\"section-header\">\n          <h2>Featured Products</h2>\n          <Link to=\"/price-tracking\" className=\"view-all\">View All Products</Link>\n        </div>\n\n        <div className=\"products-grid\">\n          {itemData.map(item => (\n            <article \n              className={`product-card ${hoveredItem === item.id ? 'hovered' : ''}`}\n              key={item.id}\n              onMouseEnter={() => setHoveredItem(item.id)}\n              onMouseLeave={() => setHoveredItem(null)}\n            >\n              <button \n                className={`favorite-btn ${favorites.has(item.id) ? 'active' : ''}`}\n                onClick={() => handleFavorite(item.id)}\n                aria-label=\"Toggle favorite\"\n              >\n                {favorites.has(item.id) ? <FavoriteIcon /> : <FavoriteBorderIcon />}\n              </button>\n\n              <Link to={`/item/${item.id}`} className=\"product-image-link\">\n                <img\n                  src={`https://picsum.photos/id/${item.id}/300`}\n                  alt={item.title}\n                  className=\"product-image\"\n                />\n                {hoveredItem === item.id && (\n                  <button \n                    className=\"quick-add-btn\"\n                    onClick={(e) => {\n                      e.preventDefault();\n                      alert(`Added ${item.title} to cart`);\n                    }}\n                  >\n                    <AddShoppingCartIcon /> Quick Add\n                  </button>\n                )}\n              </Link>\n\n              <div className=\"product-info\">\n                <h3 className=\"product-title\">\n                  <Link to={`/item/${item.id}`}>{item.title}</Link>\n                </h3>\n                <div className=\"price-container\">\n                  <span className=\"price\">${item.price.toFixed(2)}</span>\n                  {item.price < 100 && <span className=\"sale-badge\">SALE</span>}\n                </div>\n                <div className=\"rating\">\n                  \u2605\u2605\u2605\u2605\u2606 <span className=\"review-count\">(127)</span>\n                </div>\n              </div>\n            </article>\n          ))}\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default HomePage;",
    "HomePage.css": ".home-page {\n    --primary-color: #2a2a2a;\n    --accent-color: #ff4d4d;\n    --background-light: #f9f9f9;\n    --text-light: #fff;\n    --shadow: 0 4px 12px rgba(0,0,0,0.1);\n    max-width: 1440px;\n    margin: 0 auto;\n    padding: 0 1rem;\n  }\n  \n  .top-nav {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 1rem 0;\n    border-bottom: 1px solid #eee;\n  }\n  \n  .logo {\n    font-size: 1.5rem;\n    font-weight: 700;\n    color: var(--primary-color);\n    text-decoration: none;\n  }\n  \n  .nav-controls {\n    display: flex;\n    align-items: center;\n    gap: 2rem;\n  }\n  \n  .search-bar {\n    padding: 0.75rem 1.5rem;\n    border: 1px solid #ddd;\n    border-radius: 2rem;\n    width: 400px;\n    transition: all 0.3s ease;\n  }\n  \n  .search-bar:focus {\n    outline: none;\n    border-color: var(--accent-color);\n    box-shadow: 0 0 0 3px rgba(255,77,77,0.1);\n  }\n  \n  .user-actions {\n    display: flex;\n    gap: 1.5rem;\n    align-items: center;\n  }\n  \n  .cart-icon {\n    color: var(--primary-color);\n    transition: color 0.2s;\n  }\n  \n  .cart-icon:hover {\n    color: var(--accent-color);\n  }\n  \n  .user-avatar {\n    width: 40px;\n    height: 40px;\n    background: var(--accent-color);\n    color: var(--text-light);\n    border-radius: 50%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    text-decoration: none;\n    font-weight: 500;\n  }\n  \n  .hero {\n    background: linear-gradient(rgba(0,0,0,0.5), rgba(0,0,0,0.5)), \n                url('https://images.unsplash.com/photo-1483985988355-763728e1935b') center/cover;\n    border-radius: 1rem;\n    margin: 2rem 0;\n    padding: 4rem 2rem;\n    color: var(--text-light);\n    text-align: center;\n  }\n  \n  .hero-content h1 {\n    font-size: 2.5rem;\n    margin-bottom: 1rem;\n  }\n  \n  .hero-content p {\n    font-size: 1.25rem;\n    margin-bottom: 2rem;\n    opacity: 0.9;\n  }\n  \n  .cta-button {\n    background: var(--accent-color);\n    color: var(--text-light);\n    padding: 1rem 2.5rem;\n    border-radius: 2rem;\n    text-decoration: none;\n    font-weight: 600;\n    transition: transform 0.2s, box-shadow 0.2s;\n    display: inline-block;\n  }\n  \n  .cta-button:hover {\n    transform: translateY(-2px);\n    box-shadow: var(--shadow);\n  }\n  \n  .section-header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin: 3rem 0 2rem;\n  }\n  \n  .section-header h2 {\n    font-size: 1.75rem;\n    color: var(--primary-color);\n  }\n  \n  .view-all {\n    color: var(--accent-color);\n    text-decoration: none;\n    font-weight: 500;\n  }\n  \n  .products-grid {\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));\n    gap: 2rem;\n    padding: 1rem 0;\n  }\n  \n  .product-card {\n    background: var(--text-light);\n    border-radius: 1rem;\n    padding: 1rem;\n    position: relative;\n    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n    box-shadow: 0 2px 8px rgba(0,0,0,0.05);\n  }\n  \n  .product-card:hover {\n    transform: translateY(-5px);\n    box-shadow: var(--shadow);\n  }\n  \n  .favorite-btn {\n    position: absolute;\n    top: 1rem;\n    right: 1rem;\n    background: rgba(255,255,255,0.9);\n    border: none;\n    border-radius: 50%;\n    width: 36px;\n    height: 36px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    cursor: pointer;\n    z-index: 2;\n    transition: all 0.2s ease;\n  }\n  \n  .favorite-btn.active {\n    color: var(--accent-color);\n  }\n  \n  .product-image-link {\n    display: block;\n    position: relative;\n    overflow: hidden;\n    border-radius: 0.75rem;\n  }\n  \n  .product-image {\n    width: 100%;\n    height: 240px;\n    object-fit: cover;\n    transition: transform 0.3s ease;\n  }\n  \n  .product-card:hover .product-image {\n    transform: scale(1.03);\n  }\n  \n  .quick-add-btn {\n    position: absolute;\n    bottom: 1rem;\n    left: 50%;\n    transform: translateX(-50%);\n    background: rgba(255,255,255,0.95);\n    border: none;\n    padding: 0.75rem 1.5rem;\n    border-radius: 2rem;\n    display: flex;\n    align-items: center;\n    gap: 0.5rem;\n    font-weight: 500;\n    cursor: pointer;\n    box-shadow: var(--shadow);\n    animation: slideUp 0.3s ease;\n  }\n  \n  @keyframes slideUp {\n    from { bottom: -2rem; opacity: 0; }\n    to { bottom: 1rem; opacity: 1; }\n  }\n  \n  .product-info {\n    padding: 1rem 0.5rem;\n  }\n  \n  .product-title a {\n    color: var(--primary-color);\n    text-decoration: none;\n    font-weight: 600;\n    transition: color 0.2s;\n  }\n  \n  .product-title a:hover {\n    color: var(--accent-color);\n  }\n  \n  .price-container {\n    display: flex;\n    align-items: center;\n    gap: 0.75rem;\n    margin: 0.5rem 0;\n  }\n  \n  .price {\n    font-size: 1.25rem;\n    color: var(--accent-color);\n    font-weight: 700;\n  }\n  \n  .sale-badge {\n    background: var(--accent-color);\n    color: var(--text-light);\n    padding: 0.25rem 0.75rem;\n    border-radius: 1rem;\n    font-size: 0.8rem;\n    font-weight: 500;\n  }\n  \n  .rating {\n    color: #ffd700;\n    font-size: 0.9rem;\n  }\n  \n  .review-count {\n    color: #666;\n    font-size: 0.85rem;\n  }\n  \n  @media (max-width: 768px) {\n    .nav-controls {\n      gap: 1rem;\n    }\n  \n    .search-bar {\n      width: 200px;\n    }\n  \n    .hero-content h1 {\n      font-size: 2rem;\n    }\n  \n    .products-grid {\n      grid-template-columns: 1fr 1fr;\n    }\n  }\n  \n  @media (max-width: 480px) {\n    .products-grid {\n      grid-template-columns: 1fr;\n    }\n  }",
    "ItemDeatilPage.js": "import React, { useState, useCallback, useEffect } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { FaArrowLeft, FaArrowRight, FaSearchPlus } from \"react-icons/fa\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport itemData from \"../data/itemData.json\";\nimport \"./ItemDetailPage.css\";\n\nconst ItemDetailPage = () => {\n    const { id } = useParams();\n    const [currentImageIndex, setCurrentImageIndex] = useState(0);\n    const [isMagnifierActive, setIsMagnifierActive] = useState(false);\n    const [cursorPosition, setCursorPosition] = useState({ x: 0, y: 0 });\n    const [isLoading, setIsLoading] = useState(true);\n    const item = itemData.find(i => i.id === parseInt(id));\n\n    const handlePrev = () => {\n        setCurrentImageIndex(prev =>\n            prev > 0 ? prev - 1 : item.images.length - 1\n        );\n    };\n\n    const handleNext = () => {\n        setCurrentImageIndex(prev =>\n            prev < item.images.length - 1 ? prev + 1 : 0\n        );\n    };\n\n    const handleMagnifierMove = useCallback((e) => {\n        const { left, top, width, height } = e.target.getBoundingClientRect();\n        const x = Math.max(0, Math.min(100, ((e.clientX - left) / width) * 100));\n        const y = Math.max(0, Math.min(100, ((e.clientY - top) / height) * 100));\n        setCursorPosition({ x, y });\n    }, []);\n\n    useEffect(() => {\n        if (isMagnifierActive) {\n            document.body.style.overflow = 'hidden';\n            document.body.style.paddingRight = '15px'; // Prevent layout shift\n        } else {\n            document.body.style.overflow = 'unset';\n            document.body.style.paddingRight = '0';\n        }\n        return () => {\n            document.body.style.overflow = 'unset';\n            document.body.style.paddingRight = '0';\n        };\n    }, [isMagnifierActive]);\n\n    if (!item) return <div className=\"not-found\">Item not found.</div>;\n\n    return (\n        <div className=\"item-detail-container\">\n            <div className=\"gallery-section\">\n                <div className=\"main-image-wrapper\">\n                    {item.images.length > 1 && (\n                        <motion.button\n                            className=\"nav-arrow left\"\n                            onClick={handlePrev}\n                            aria-label=\"Previous image\"\n                            whileHover={{ scale: 1.1 }}\n                       whileTap={{ scale: 0.95 }}\n                        >\n                            <FaArrowLeft />\n                        </motion.button>\n                    )}\n\n                    <div\n                        className=\"image-container\"\n                        onMouseMove={handleMagnifierMove}\n                        onMouseLeave={() => setIsMagnifierActive(false)}\n                    >\n                        <AnimatePresence mode=\"wait\">\n                            <motion.img\n                                key={currentImageIndex}\n                                src={item.images[currentImageIndex]}\n                                alt={item.title}\n                                className=\"main-image\"\n                                initial={{ opacity: 0 }}\n                                animate={{ opacity: 1 }}\n                                exit={{ opacity: 0 }}\n                transition={{ duration: 0.3 }}\n                                onLoad={() => setIsLoading(false)}\n                            />\n                        </AnimatePresence>\n\n                        {isLoading && (\n                            <div className=\"image-skeleton\" />\n                        )}\n\n                        <motion.button\n                            className=\"magnifier-trigger\"\n                            onClick={() => setIsMagnifierActive(!isMagnifierActive)}\n                            aria-label=\"Toggle magnifier\"\n                            whileHover={{ scale: 1.1 }}\n                            whileTap={{ scale: 0.95 }}\n                        >\n                            <FaSearchPlus />\n                        </motion.button>\n\n                        {isMagnifierActive && (\n                            <motion.div\n                               className=\"magnifier-overlay\"\n                                style={{\n                                    backgroundPosition: `${cursorPosition.x}% ${cursorPosition.y}%`,\n                                    backgroundImage: `url(${item.images[currentImageIndex]})`\n                                }}\n                                initial={{ opacity: 0 }}\n                                animate={{ opacity: 1 }}\n                                exit={{ opacity: 0 }}\n                            />\n                        )}\n                    </div>\n\n                    {item.images.length > 1 && (\n                        <motion.button\n                            className=\"nav-arrow right\"\n                            onClick={handleNext}\n                            aria-label=\"Next image\"\n                            whileHover={{ scale: 1.1 }}\n                            whileTap={{ scale: 0.95 }}\n                        >\n                            <FaArrowRight />\n                        </motion.button>\n                    )}\n                </div>\n\n                {item.images.length > 1 && (\n                    <div className=\"dots-container\">\n                        {item.images.map((_, index) => (\n                            <motion.div\n                                key={index}\n                                className={`dot ${index === currentImageIndex ? 'active' : ''}`}\n                                onClick={() => setCurrentImageIndex(index)}\n                           whileHover={{ scale: 1.2 }}\n                                transition={{ type: 'spring', stiffness: 500 }}\n                            />\n                        ))}\n                    </div>\n                )}\n            </div>\n\n            <motion.div\n                className=\"product-info\"\n                initial={{ y: 20, opacity: 0 }}\n                animate={{ y: 0, opacity: 1 }}\n                transition={{ delay: 0.2 }}\n            >\n                <h1 className=\"product-title\">{item.title}</h1>\n                <p className=\"product-price\">${item.price.toFixed(2)}</p>\n                <p className=\"product-description\">{item.description}</p>\n\n                <div className=\"action-buttons\">\n                    <motion.div whileHover={{ scale: 1.03 }} whileTap={{ scale: 0.98 }}>\n                        <Link to={`/track/${item.id}`} className=\"track-button\">\n                            Track Price Changes\n                        </Link>\n                    </motion.div>\n                    <motion.div whileHover={{ scale: 1.03 }} whileTap={{ scale: 0.98 }}>\n                        <Link to=\"/home\" className=\"back-button\">\n                            Continue Shopping\n                        </Link>\n                    </motion.div>\n                </div>\n            </motion.div>\n        </div>\n    );\n};\n\nexport default ItemDetailPage;",
    "ItemDeatilPage.css": ".item-detail-container {\n    display: flex;\n    flex-direction: column;\n    max-width: 1200px;\n    margin: 2rem auto;\n    padding: 0 1rem;\n    gap: 2rem;\n}\n\n@media (min-width: 768px) {\n    .item-detail-container {\n        flex-direction: row;\n        gap: 3rem;\n        padding: 0 2rem;\n    }\n}\n\n.gallery-section {\n    flex: 1;\n    display: flex;\n    flex-direction: column;\n    gap: 1rem;\n}\n\n.main-image-wrapper {\n    position: relative;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    gap: 1rem;\n}\n\n.image-container {\n    position: relative;\n    width: 100%;\n    max-width: 500px;\n    aspect-ratio: 1/1;\n    overflow: hidden;\n    border-radius: 0.5rem;\n    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n    background-color: #f5f5f5;\n}\n\n.main-image {\n    width: 100%;\n    height: 100%;\n    object-fit: contain;\n    display: block;\n}\n\n.image-skeleton {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background: linear-gradient(90deg, #f0f0f0 25%, #e0e0e0 50%, #f0f0f0 75%);\n    background-size: 200% 100%;\n    animation: shimmer 1.5s infinite;\n}\n\n@keyframes shimmer {\n    0% { background-position: 200% 0; }\n    100% { background-position: -200% 0; }\n}\n\n.nav-arrow {\n    position: static;\n    width: 40px;\n    height: 40px;\n    border-radius: 50%;\n    background: rgba(255, 255, 255, 0.8);\n    border: none;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    cursor: pointer;\n    color: #333;\n    font-size: 1rem;\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n    z-index: 2;\n}\n\n.magnifier-trigger {\n    position: absolute;\n    bottom: 1rem;\n    right: 1rem;\n    width: 40px;\n    height: 40px;\n    border-radius: 50%;\n    background: rgba(255, 255, 255, 0.8);\n    border: none;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    cursor: pointer;\n    color: #333;\n    font-size: 1rem;\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n    z-index: 2;\n}\n\n.magnifier-overlay {\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100vw;\n    height: 100vh;\n    background-color: rgba(0, 0, 0, 0.8);\n    z-index: 100;\n    pointer-events: none;\n    background-repeat: no-repeat;\n    background-size: 200%;\n    cursor: none;\n}\n\n.dots-container {\n    display: flex;\n    justify-content: center;\n    gap: 0.5rem;\n    padding: 0.5rem 0;\n}\n\n.dot {\n    width: 10px;\n    height: 10px;\n    border-radius: 50%;\n    background-color: #ddd;\n    cursor: pointer;\n    transition: all 0.3s ease;\n}\n\n.dot.active {\n    background-color: #333;\n    transform: scale(1.2);\n}\n\n.product-info {\n    flex: 1;\n    display: flex;\n    flex-direction: column;\n    gap: 1.5rem;\n}\n\n.product-title {\n    font-size: 2rem;\n    font-weight: 600;\n    color: #333;\n    margin: 0;\n}\n\n.product-price {\n    font-size: 1.5rem;\n    font-weight: 700;\n    color: #2c3e50;\n    margin: 0;\n}\n\n.product-description {\n    font-size: 1rem;\n    line-height: 1.6;\n    color: #555;\n    margin: 0;\n}\n\n.action-buttons {\n    display: flex;\n    flex-direction: column;\n    gap: 1rem;\n    margin-top: 1rem;\n}\n\n.track-button, .back-button {\n    display: block;\n    padding: 0.75rem 1.5rem;\n    text-align: center;\n    border-radius: 0.5rem;\n    font-weight: 500;\n    text-decoration: none;\n    transition: all 0.2s ease;\n}\n\n.track-button {\n    background-color: #2c3e50;\n    color: white;\n}\n\n.back-button {\n    background-color: #f5f5f5;\n    color: #333;\n    border: 1px solid #ddd;\n}\n\n.not-found {\n    text-align: center;\n    padding: 2rem;\n    font-size: 1.2rem;\n    color: #ff3333;\n}",
    "PriceTrackingPage.js": "// src/components/PriceTrackingPage.js\nimport React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer\n} from 'recharts';\nimport styled from 'styled-components';\nimport { theme } from '../theme'; // Assume we have a theme file for consistent styling\n\nconst Container = styled.div`\n  padding: 2rem;\n  max-width: 1200px;\n  margin: 0 auto;\n`;\n\nconst Header = styled.div`\n  margin-bottom: 2rem;\n  text-align: center;\n\n  h2 {\n    font-size: 2rem;\n    color: ${theme.colors.primary};\n    margin-bottom: 0.5rem;\n  }\n\n  p {\n    color: ${theme.colors.textSecondary};\n  }\n`;\n\nconst ChartContainer = styled.div`\n  background: white;\n  border-radius: 12px;\n  padding: 2rem;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);\n  margin-bottom: 2rem;\n  height: 400px;\n`;\n\nconst DataTable = styled.table`\n  width: 100%;\n  border-collapse: collapse;\n  background: white;\n  border-radius: 12px;\n  overflow: hidden;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);\n\n  th, td {\n    padding: 1rem;\n    text-align: left;\n    border-bottom: 1px solid ${theme.colors.border};\n  }\n\n  th {\n    background-color: ${theme.colors.primaryLight};\n    color: ${theme.colors.primary};\n    font-weight: 600;\n  }\n\n  tr:hover {\n    background-color: ${theme.colors.hover};\n  }\n\n  @media (max-width: 768px) {\n    th, td {\n      padding: 0.75rem;\n    font-size: 0.9rem;\n    display: block;\n      width: 100%;\n      box-sizing: border-box;\n    }\n\n    tr {\n      margin-bottom: 1rem;\n      display: block;\n      border: 1px solid ${theme.colors.border};\n      border-radius: 8px;\n    }\n  }\n`;\n\nconst mockPriceData = {\n  item1: [\n    { month: \"Jan\", price: 99 },\n    { month: \"Feb\", price: 105 },\n    { month: \"Mar\", price: 102 },\n    { month: \"Apr\", price: 97 },\n    { month: \"May\", price: 103 },\n    { month: \"Jun\", price: 98 },\n    { month: \"Jul\", price: 99 },\n    { month: \"Aug\", price: 105 },\n    { month: \"Sep\", price: 102 },\n    { month: \"Oct\", price: 97 },\n    { month: \"Nov\", price: 103 },\n    { month: \"Dec\", price: 98 }\n  ],\n  item2: [\n    { month: \"Jan\", price: 129 },\n    { month: \"Feb\", price: 125 },\n    { month: \"Mar\", price: 123 },\n    { month: \"Apr\", price: 130 },\n    { month: \"May\", price: 127 },\n    { month: \"Jun\", price: 126 },\n    { month: \"Jul\", price: 99 },\n    { month: \"Aug\", price: 105 },\n    { month: \"Sep\", price: 102 },\n    { month: \"Oct\", price: 97 },\n    { month: \"Nov\", price: 103 },\n    { month: \"Dec\", price: 98 }\n  ],\n  item3: [\n    { month: \"Jan\", price: 129 },\n    { month: \"Feb\", price: 125 },\n    { month: \"Mar\", price: 123 },\n    { month: \"Apr\", price: 130 },\n    { month: \"May\", price: 127 },\n    { month: \"Jun\", price: 126 },\n    { month: \"Jul\", price: 99 },\n    { month: \"Aug\", price: 105 },\n    { month: \"Sep\", price: 102 },\n    { month: \"Oct\", price: 97 },\n    { month: \"Nov\", price: 103 },\n    { month: \"Dec\", price: 98 }\n  ]\n};\n\nconst PriceTrackingPage = () => {\n  const { id } = useParams();\n  const priceData = mockPriceData[`item${id}`] || [];\n\n  // Calculate price change statistics\n  const currentPrice = priceData.length > 0 ? priceData[priceData.length - 1].price : 0;\n  const lowestPrice = Math.min(...priceData.map(item => item.price));\n  const highestPrice = Math.max(...priceData.map(item => item.price));\n\n  return (\n    <Container>\n      <Header>\n        <h2>Price History for Product #{id}</h2>\n        <p>Track price fluctuations and identify the best time to buy</p>\n      </Header>\n\n      <ChartContainer>\n        <ResponsiveContainer width=\"100%\" height=\"100%\">\n          <LineChart\n            data={priceData}\n            margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\n          >\n            <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#f0f0f0\" />\n            <XAxis \n              dataKey=\"month\" \n              tick={{ fill: theme.colors.textSecondary }}\n            />\n            <YAxis \n              unit=\"$\" \n              tick={{ fill: theme.colors.textSecondary }}\n            />\n            <Tooltip \n              contentStyle={{\n                background: theme.colors.background,\n                border: `1px solid ${theme.colors.border}`,\n                borderRadius: '8px'\n              }}\n              formatter={(value) => [`$${value}`, 'Price']}\n            />\n            <Legend />\n            <Line\n              type=\"monotone\"\n              dataKey=\"price\"\n              stroke={theme.colors.primary}\n              strokeWidth={2}\n              dot={{ r: 4 }}\n              activeDot={{ r: 6, stroke: theme.colors.primaryDark, strokeWidth: 2 }}\n            />\n          </LineChart>\n        </ResponsiveContainer>\n      </ChartContainer>\n\n      <DataTable>\n        <thead>\n          <tr>\n            <th>Month</th>\n            <th>Price</th>\n            <th>Change</th>\n          </tr>\n        </thead>\n        <tbody>\n          {priceData.map((entry, index) => {\n            const previousPrice = index > 0 ? priceData[index - 1].price : null;\n            const priceChange = previousPrice !== null ? entry.price - previousPrice : null;\n            \n            return (\n              <tr key={index}>\n                <td>{entry.month}</td>\n                <td>${entry.price.toFixed(2)}</td>\n                <td style={{ \n                  color: priceChange > 0 ? theme.colors.error : \n                        priceChange < 0 ? theme.colors.success : \n                        theme.colors.textSecondary \n                }}>\n                  {priceChange !== null ? \n                    `${priceChange > 0 ? '+' : ''}${priceChange.toFixed(2)}` : \n                    '\u2014'}\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </DataTable>\n\n      <div style={{ \n        display: 'flex', \n        gap: '1rem', \n        marginTop: '2rem',\n        flexWrap: 'wrap'\n      }}>\n        <StatCard \n          title=\"Current Price\" \n          value={`$${currentPrice.toFixed(2)}`} \n          color={theme.colors.primary}\n        />\n        <StatCard \n          title=\"Lowest Price\" \n          value={`$${lowestPrice.toFixed(2)}`} \n          color={theme.colors.success}\n        />\n        <StatCard \n          title=\"Highest Price\" \n          value={`$${highestPrice.toFixed(2)}`} \n          color={theme.colors.error}\n        />\n      </div>\n    </Container>\n  );\n};\n\nconst StatCard = ({ title, value, color }) => (\n  <div style={{\n    background: 'white',\n    padding: '1.5rem',\n    borderRadius: '12px',\n    boxShadow: '0 4px 12px rgba(0, 0, 0, 0.05)',\n    flex: '1',\n    minWidth: '200px'\n  }}>\n    <h3 style={{ \n      color: theme.colors.textSecondary,\n      fontSize: '0.9rem',\n      marginBottom: '0.5rem'\n    }}>{title}</h3>\n    <p style={{ \n      color: color,\n      fontSize: '1.5rem',\n      fontWeight: '600',\n      margin: 0\n    }}>{value}</p>\n  </div>\n);\n\nexport default PriceTrackingPage;",
    "PriceTrackingPage.css": "",
    "PriceTrackingChart.js": "import React from 'react';\nimport {\n  ResponsiveContainer,\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n} from 'recharts';\nimport PropTypes from 'prop-types';\n\n/**\n * Reusable price tracking line chart.\n */\nconst PriceTrackingChart = ({ data }) => {\n  if (!data?.length) return <p style={{ textAlign: 'center' }}>No price data available.</p>;\n\n  return (\n    <div style={{ width: '100%', height: 300 }}>\n      <ResponsiveContainer>\n        <LineChart data={data} margin={{ top: 20, right: 30, left: 10, bottom: 5 }}>\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"month\" />\n          <YAxis />\n          <Tooltip />\n          <Line\n            type=\"monotone\"\n            dataKey=\"price\"\n            stroke=\"#8884d8\"\n            strokeWidth={2}\n            activeDot={{ r: 6 }}\n            dot={{ r: 4 }}\n          />\n        </LineChart>\n      </ResponsiveContainer>\n    </div>\n  );\n};\n\nPriceTrackingChart.propTypes = {\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      month: PropTypes.string.isRequired,\n      price: PropTypes.number.isRequired,\n    })\n  ).isRequired,\n};\n\nexport default PriceTrackingChart;",
    "PriceTrackingChart.css": ""
}